C51 COMPILER V9.54   MAIN                                                                  02/28/2019 21:24:39 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Output\main.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE Code\main.c ROM(COMPACT) OPTIMIZE(8,SIZE) BROWSE INCDIR(..\..\Include;..\In
                    -clude) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\main.lst) OBJECT(.\Output\main.obj)

line level    source

   1          
   2          #include "N76E003.h"
   3          #include "SFR_Macro.h"
   4          #include "Function_define.h"
   5          #include "dataflash.h"
   6          #include "key.h"
   7          #include "motor.h"
   8          #include "led.h"
   9          
  10          #define TH0_INIT        (65536-6667)/256 //5.0ms@XTAL=12MHz, Period = (10.85/2) ms@XTAL=22.1184MHz
  11          #define TL0_INIT        (65536-6667)%256
  12          #define TH1_INIT        0xE0 //2.5ms@XTAL=12MHz, Period = (5.425/2) ms@XTAL=22.1184MHz
  13          #define TL1_INIT        0x00
  14          
  15          bit BIT_TMP;
  16          
  17          unsigned char is_5ms_Flag;
  18          unsigned int dpdtime;
  19          #define ADC_CNT 8
  20          unsigned char adccnt;
  21          unsigned int adc[ADC_CNT];
  22          unsigned char batlevel;
  23          unsigned char batlevelledtimeout;
  24          extern unsigned char Motor_Level;
  25          extern unsigned int led_display_time;
  26          /********************************/
  27          #define Stage_A         1
  28          #define Stage_B         2
  29          #define Stage_C         4
  30          #define Stage_D         8
  31          
  32          unsigned char system_stage;
  33          bit isneedinitstage;
  34          bit isneedinitbatled;
  35          bit isneedinitsys;
  36          bit ischarging;
  37          bit isstartsystem;
  38          unsigned char startADC_cnt;
  39          unsigned char batlevel_led_value;
  40          unsigned char led_type;
  41          unsigned char adc_pre_cnt;
  42          /*******************************/
  43          
  44          
  45          /*********************************************************************************************************
             -***
  46          *    TIMER 0 interrupt subroutine
  47          **********************************************************************************************************
             -**/
  48          void Timer0_ISR (void) interrupt 1          //interrupt address is 0x000B
  49          {
  50   1          TH0 = TH0_INIT;
  51   1          TL0 = TL0_INIT;
  52   1              is_5ms_Flag = 1;
C51 COMPILER V9.54   MAIN                                                                  02/28/2019 21:24:39 PAGE 2   

  53   1              dpdtime++;
  54   1              startADC_cnt ++;
  55   1              led_display_time++;
  56   1              if (isStartMotor)
  57   1                      Motor_done_cnt++;
  58   1      }
  59          
  60          void Timer0_Init(void)
  61          {
  62   1              TMOD = 0XFF;
  63   1              TIMER0_MODE1_ENABLE;                        //Timer 0  mode configuration
  64   1          
  65   1              clr_T0M;
  66   1          
  67   1              TH0 = TH0_INIT;
  68   1              TL0 = TL0_INIT;
  69   1          
  70   1              set_ET0;                                    //enable Timer0 interrupt
  71   1              set_EA;                                     //enable interrupts
  72   1              
  73   1              set_TR0;                                    //Timer0 run
  74   1      }
  75          
  76          unsigned int getadcvalue(void)
  77          {
  78   1              unsigned char i;
  79   1              unsigned int adcvalue;
  80   1              adcvalue = 0;
  81   1              for(i=0;i<ADC_CNT;i++)
  82   1              {
  83   2                      adcvalue += adc[i];
  84   2              }
  85   1              adcvalue >>=3;
  86   1              return adcvalue;
  87   1      }
  88          
  89          unsigned char batlevel_to_led_value(void)
  90          {
  91   1              unsigned char val;
  92   1              if (batlevel == 4)
  93   1              {
  94   2                      val = 0x0F;
  95   2              }
  96   1              else if (batlevel == 3)
  97   1              {
  98   2                      val = 0x07;
  99   2              }
 100   1              else if (batlevel == 2)
 101   1              {
 102   2                      val = 0x03;
 103   2              }
 104   1              else if (batlevel == 1)
 105   1              {
 106   2                      val = 0x01;
 107   2              }
 108   1              else
 109   1              {
 110   2                      val = 0;
 111   2              }
 112   1              return val;
 113   1      }
 114          
C51 COMPILER V9.54   MAIN                                                                  02/28/2019 21:24:39 PAGE 3   

 115          unsigned char getbatlevel(void)
 116          {
 117   1              unsigned int adcvalue;
 118   1              unsigned char templevel;
 119   1              unsigned char i;
 120   1              if (startADC_cnt > 0)
 121   1              {
 122   2                      startADC_cnt = 0;
 123   2                      clr_ADCF;
 124   2                      set_ADCS;                                                                       // ADC start trig signal
 125   2                      while(ADCF == 0);
 126   2                      adcvalue = ADCRH;
 127   2                      adcvalue <<= 4;
 128   2                      adcvalue |= ADCRL&0x0F;
 129   2                      adc[adccnt] = adcvalue;
 130   2                      adccnt++;
 131   2                      if (adccnt >= ADC_CNT)
 132   2                      {
 133   3                              adccnt = 0;
 134   3                              adcvalue = getadcvalue();
 135   3                              i = get_motor_level();
 136   3                              if (i == 1)
 137   3                              {
 138   4                                      adcvalue = adcvalue + 0x20;
 139   4                              }
 140   3                              else if (i == 2)
 141   3                              {
 142   4                                      adcvalue = adcvalue + 0x10;
 143   4                              }
 144   3                              else if (i == 4)
 145   3                              {
 146   4                                      adcvalue = adcvalue + 0x08;
 147   4                              }
 148   3                              if (ischarging)
 149   3                              {
 150   4                                      adcvalue = adcvalue - 0x80;     //0x90 -> 0.3v
 151   4                              }
 152   3                              if (adcvalue > 0xCA0)   //>75%  8v              
 153   3                              {
 154   4                                      templevel = 4;
 155   4                              }
 156   3                              else if (adcvalue > 0xC40)      //>50%  7.7v
 157   3                              {
 158   4                                      templevel = 3;
 159   4                              }
 160   3                              else if (adcvalue > 0xBD0)      //>25%  7.4
 161   3                              {
 162   4                                      templevel = 2;
 163   4                              }
 164   3                              else if (adcvalue > 0xB60)      //<25%  7v
 165   3                              {
 166   4                                      templevel = 1;
 167   4                              }
 168   3                              else if (adcvalue < 0xA00)
 169   3                              {
 170   4                                      templevel = 0;
 171   4                              }
 172   3      //                      if (adc_pre_cnt > 4)
 173   3      //                      {
 174   3      //                              adc_pre_cnt = 10;
 175   3      //                              if (ischarging)
 176   3      //                              {
C51 COMPILER V9.54   MAIN                                                                  02/28/2019 21:24:39 PAGE 4   

 177   3      //                                      if (templevel >= batlevel)
 178   3      //                                              batlevel = templevel;
 179   3      //                              }
 180   3      //                              else
 181   3      //                              {
 182   3      //                                      if (templevel <= batlevel)
 183   3      //                                              batlevel = templevel;
 184   3      //                              }
 185   3      //                      }
 186   3      //                      else
 187   3                                      batlevel = templevel;
 188   3                              adc_pre_cnt++;
 189   3                              batlevel_led_value = batlevel_to_led_value();
 190   3                              return 1;
 191   3                      }
 192   2              }       
 193   1              return 0;
 194   1      }
 195          
 196          //----------------------------------------------------------------------------------
 197          // UART0 baud rate initial setting 
 198          //----------------------------------------------------------------------------------
 199          void InitialUART0_Timer1(unsigned long u32Baudrate)    //T1M = 1, SMOD = 1
 200          {
 201   1                      P06_Quasi_Mode;         //Setting UART pin as Quasi mode for transmit
 202   1                      P07_Quasi_Mode;         //Setting UART pin as Quasi mode for transmit
 203   1              
 204   1          SCON = 0x50;        //UART0 Mode1,REN=1,TI=1
 205   1          TMOD |= 0x20;       //Timer1 Mode1
 206   1          
 207   1          set_SMOD;           //UART0 Double Rate Enable
 208   1          set_T1M;
 209   1          clr_BRCK;           //Serial port 0 baud rate clock source = Timer1
 210   1       
 211   1      #ifdef FOSC_160000
 212   1          TH1 = 256 - (1000000/u32Baudrate+1);               /*16 MHz */
 213   1      #endif          
 214   1      #ifdef FOSC_166000
                  TH1 = 256 - (1037500/u32Baudrate);                       /*16.6 MHz */
              #endif
 217   1          set_TR1;
 218   1                      set_TI;                                         //For printf function must setting TI = 1
 219   1      }
 220          void Timer3_Delay5ms(unsigned long u32CNT)
 221          {
 222   1          T3CON = 0x07;                                       //Timer3 Clock = Fsys/128
 223   1          set_TR3;                                            //Trigger Timer3
 224   1          while (u32CNT != 0)
 225   1          {
 226   2              RL3 = (65536-6667)>>8; //Find  define in "Function_define.h" "TIMER VALUE"
 227   2              RH3 = (65536-6667)&0xFF;
 228   2              while ((T3CON&SET_BIT4) != SET_BIT4);           //Check Timer3 Time-Out Flag
 229   2              clr_TF3;
 230   2              u32CNT --;
 231   2          }
 232   1          clr_TR3;                                            //Stop Timer3
 233   1      }
 234          
 235          unsigned int adcvalue;
 236          void SysInit(void)
 237          {
 238   1              Init_LED();
C51 COMPILER V9.54   MAIN                                                                  02/28/2019 21:24:39 PAGE 5   

 239   1      //      Timer0_Init();  
 240   1              startADC_cnt = 0;
 241   1              adccnt = 0;
 242   1              KeyInit();      
 243   1              P04_OpenDrain_Mode;
 244   1              Timer3_Delay5ms(1);
 245   1                      Enable_ADC_AIN5;                                                // Enable AIN0 P1.7 as ADC input, Find in "Function_define.h" - "ADC INIT"
 246   1                      while(1)
 247   1          {
 248   2                              clr_ADCF;
 249   2                              set_ADCS;                                                                       // ADC start trig signal
 250   2            while(ADCF == 0);
 251   2                      adcvalue = ADCRH;
 252   2                      adcvalue <<= 4;
 253   2                      adcvalue |= ADCRL&0x0F;
 254   2                      adcvalue = adcvalue >> 1;
 255   2                              printf ("\n Value = 0x%x",adcvalue);
 256   2                              Timer3_Delay5ms(1);
 257   2          }   
 258   1      //      InitPWM();
 259   1              system_stage = Stage_A;
 260   1              isneedinitstage = 1;
 261   1              led_type = 0; 
 262   1              isneedinitbatled = 0;
 263   1              batlevelledtimeout = 0; 
 264   1              batlevel_led_value = 0;
 265   1              ischarging = 0;
 266   1              adc_pre_cnt = 0;
 267   1              P07_PushPull_Mode;
 268   1              P07 = 1;
 269   1              P07_Input_Mode;
 270   1              Enable_ADC_AIN5;
 271   1              if (isstartsystem == 0)
 272   1              {
 273   2                      while(dpdtime<300)
 274   2                      {
 275   3                              getbatlevel();
 276   3      //                      startADC_cnt++;
 277   3                      }
 278   2                      isstartsystem = 1;
 279   2              }
 280   1              dpdtime = 0;
 281   1              led_display_time = 0;
 282   1              startADC_cnt = 0;
 283   1      //      while(1)
 284   1      //      {
 285   1      //              if (getbatlevel() == 1)
 286   1      //                      break;
 287   1      //      }
 288   1      }
 289          
 290          void main(void)
 291          {
 292   1              unsigned char keystatus,i;
 293   1              Set_All_GPIO_Quasi_Mode;
 294   1              
 295   1                      set_CLOEN;
 296   1                      Set_All_GPIO_Quasi_Mode;                                        // Define in Function_define.h
 297   1                      InitialUART0_Timer1(115200);
 298   1              
 299   1              isneedinitsys = 1;
 300   1              isstartsystem = 0;
C51 COMPILER V9.54   MAIN                                                                  02/28/2019 21:24:39 PAGE 6   

 301   1              while(1)
 302   1              {
 303   2                      if (isneedinitsys)
 304   2                      {
 305   3                              SysInit();
 306   3                              isneedinitsys = 0;
 307   3                      }
 308   2                      if (is_5ms_Flag)
 309   2                      {
 310   3                              if (batlevelledtimeout)
 311   3                                      batlevelledtimeout--;
 312   3                              keystatus = KeyScan();
 313   3                              if (system_stage == Stage_A)
 314   3                              {
 315   4                                      if (isneedinitstage == 1)
 316   4                                      {
 317   5                                              isneedinitstage = 0;
 318   5                                              //init stage A
 319   5                                              LED_WHITE_Setting(0,0);
 320   5                                              LED_RGB_Setting(0,0);
 321   5                                              led_type = 0;
 322   5                                              dpdtime = 0;
 323   5                                              ischarging = 0;
 324   5                                      }
 325   4                                      if (keystatus & 0x01)//key
 326   4                                      {
 327   5                                              //display power as LED
 328   5                                              led_type = 1;
 329   5                                              isneedinitbatled = 1;
 330   5                                              batlevelledtimeout = 200;
 331   5                                      }
 332   4                                      if (keystatus & 0x02)
 333   4                                      {
 334   5                                              system_stage = Stage_B;
 335   5                                              isneedinitstage = 1;
 336   5                                      }
 337   4                                      if (keystatus & 0x04)
 338   4                                      {
 339   5                                              if (system_stage == Stage_B)
 340   5                                                      system_stage = Stage_D;
 341   5                                              else
 342   5                                                      system_stage = Stage_C;
 343   5                                              isneedinitstage = 1;
 344   5                                      }                       
 345   4                              }
 346   3                              else if (system_stage == Stage_B)
 347   3                              {
 348   4                                      if (isneedinitstage == 1)
 349   4                                      {
 350   5                                              isneedinitstage = 0;
 351   5                                              //init stage B
 352   5                                              led_type = 2;   
 353   5                                              isneedinitbatled = 1;
 354   5                                              dpdtime = 0;
 355   5                                              ischarging = 0;
 356   5                                      }
 357   4                                      if (keystatus & 0x01)//key
 358   4                                      {
 359   5                                              //change pwm
 360   5                                              i  = Change_Motor_PWM();
 361   5                                              LED_RGB_Setting(i,0);
 362   5                                      }
C51 COMPILER V9.54   MAIN                                                                  02/28/2019 21:24:39 PAGE 7   

 363   4                                      if (keystatus & 0x02)//safety
 364   4                                      {
 365   5                                      }
 366   4                                      else
 367   4                                      {
 368   5                                              system_stage = Stage_A;
 369   5                                              isneedinitstage = 1;
 370   5                                              //turn off pwm
 371   5                                              TurnOffMotor();
 372   5                                              LED_RGB_Setting(0,0);
 373   5                                      }
 374   4                                      
 375   4                                      if (keystatus & 0x04)//charging
 376   4                                      {
 377   5                                              if (system_stage == Stage_A)
 378   5                                              {
 379   6                                                      system_stage = Stage_C;
 380   6                                              }
 381   5                                              else
 382   5                                                      system_stage = Stage_D;
 383   5                                              TurnOffMotor();
 384   5                                              LED_RGB_Setting(0,0);
 385   5                                              isneedinitstage = 1;
 386   5                                      }
 387   4                                      
 388   4                                      if (keystatus & 0x08)
 389   4                                      {
 390   5                                              //turn off pwm
 391   5                                              TurnOffMotor();
 392   5                                              LED_RGB_Setting(0,0);
 393   5                                      }
 394   4                                      
 395   4                              }
 396   3                              else if (system_stage == Stage_C)
 397   3                              {
 398   4                                      if (isneedinitstage == 1)
 399   4                                      {
 400   5                                              isneedinitstage = 0;
 401   5                                              //init stage C
 402   5                                              led_type = 3;   
 403   5                                              isneedinitbatled = 1;
 404   5                                              dpdtime = 0;
 405   5                                              ischarging = 1;
 406   5                                              //turn off pwm
 407   5                                              TurnOffMotor();
 408   5                                              LED_RGB_Setting(0,0);
 409   5                                      }
 410   4                                      if (keystatus & 0x01)//key
 411   4                                      {
 412   5                                              
 413   5                                      }
 414   4                                      if (keystatus & 0x02)//safety
 415   4                                      {
 416   5                                              //enter stage_B
 417   5                                              system_stage = Stage_D;
 418   5                                              isneedinitstage = 1;
 419   5                                      }
 420   4                                      
 421   4                                      if (keystatus & 0x04)//charging
 422   4                                      {
 423   5                                              dpdtime = 0;
 424   5                                      }
C51 COMPILER V9.54   MAIN                                                                  02/28/2019 21:24:39 PAGE 8   

 425   4                                      else
 426   4                                      {
 427   5                                              if (system_stage == Stage_D)
 428   5                                              {
 429   6                                                      system_stage = Stage_B;
 430   6                                              }
 431   5                                              else
 432   5                                                      system_stage = Stage_A;
 433   5                                              isneedinitstage = 1;
 434   5                                      }
 435   4                              }
 436   3                              else if (system_stage == Stage_D)
 437   3                              {
 438   4                                      if (isneedinitstage == 1)
 439   4                                      {
 440   5                                              isneedinitstage = 0;
 441   5                                              isneedinitbatled = 1;
 442   5                                              //init stage D
 443   5                                              led_type = 3;
 444   5                                              dpdtime = 0;
 445   5                                              ischarging = 1;
 446   5                                      }
 447   4                                      if (keystatus & 0x01)//key
 448   4                                      {
 449   5                                              //change pwm
 450   5                                              i  = Change_Motor_PWM();
 451   5                                              LED_RGB_Setting(i,0);
 452   5                                      }
 453   4                                      if (keystatus & 0x02)//safety
 454   4                                      {
 455   5                                      }
 456   4                                      else
 457   4                                      {
 458   5                                              system_stage = Stage_C;
 459   5                                              isneedinitstage = 1;
 460   5                                              TurnOffMotor();
 461   5                                              LED_RGB_Setting(0,0);
 462   5                                      }
 463   4                                      
 464   4                                      if (keystatus & 0x04)//charging
 465   4                                      {
 466   5                                              dpdtime = 0;
 467   5                                      }
 468   4                                      else
 469   4                                      {
 470   5                                              if (system_stage == Stage_C)
 471   5                                              {
 472   6                                                      system_stage = Stage_A;
 473   6                                              }
 474   5                                              else
 475   5                                                      system_stage = Stage_B;
 476   5                                              isneedinitstage = 1;    
 477   5                                              TurnOffMotor(); 
 478   5                                              LED_RGB_Setting(0,0);
 479   5                                      }
 480   4                                      
 481   4                                      if (keystatus & 0x08)
 482   4                                      {
 483   5                                              //turn off pwm
 484   5                                              TurnOffMotor();
 485   5                                              LED_RGB_Setting(0,0);
 486   5                                      }
C51 COMPILER V9.54   MAIN                                                                  02/28/2019 21:24:39 PAGE 9   

 487   4                              }
 488   3                              
 489   3                              //ADC process
 490   3                              getbatlevel();
 491   3                              if (led_type)
 492   3                              {
 493   4                                      if(isneedinitbatled && batlevel_led_value)
 494   4                                      {
 495   5                                              i = led_type - 1;
 496   5                                              LED_WHITE_Setting(batlevel_led_value,i);
 497   5                                              isneedinitbatled = 0;
 498   5                                      }
 499   4                                      if(batlevelledtimeout==0)
 500   4                                      {
 501   5                                              if (led_type == 1)
 502   5                                              {
 503   6                                                      led_type = 0;
 504   6                                                      LED_WHITE_Setting(0,0);
 505   6                                              }
 506   5                                      }
 507   4                              }
 508   3                              //pwm rate
 509   3                              if (check_motor_done())
 510   3                              {
 511   4                                      //turn off pwm
 512   4                                      TurnOffMotor();
 513   4                                      LED_RGB_Setting(0,0);
 514   4                                      //goto stage A,B
 515   4                                      #warning "change stage to A or B"
*** WARNING C320 IN LINE 515 OF Code\main.c: "change stage to A or B"
 516   4                              }
 517   3                              if(get_motor_level())
 518   3                              {
 519   4                                      dpdtime = 0;
 520   4                              }
 521   3                              //LED_Process           
 522   3                              LED_Process(batlevel_led_value);
 523   3                              
 524   3                              //dpd
 525   3                              if (dpdtime >= 2000)
 526   3                              {
 527   4                                      dpdtime = 0;
 528   4                                      //enter dpd
 529   4                                      //
 530   4                                      Set_All_GPIO_Quasi_Mode;
 531   4                                      clr_ADCEN;
 532   4                                      
 533   4                                      TurnOffMotor();
 534   4                                      LED_WHITE_Setting(0,0);
 535   4                                      LED_RGB_Setting(0,0);
 536   4                                      DeInit_LED();
*** WARNING C206 IN LINE 536 OF Code\main.c: 'DeInit_LED': missing function-prototype
 537   4                                      
 538   4                                      P17_Input_Mode;
 539   4                                      set_P1S_7;
 540   4                                      set_EX1;
 541   4                                                                      
 542   4                                      set_PD;
 543   4      
 544   4                                      PICON  = 0;
 545   4                                                              
 546   4                                      clr_EX0;
C51 COMPILER V9.54   MAIN                                                                  02/28/2019 21:24:39 PAGE 10  

 547   4                                      clr_EX1;
 548   4                                      clr_EPI;
 549   4                                      isneedinitsys = 1;
 550   4                              }
 551   3                      }
 552   2              }
 553   1      }
 554          
 555          void EXT_INT1(void) interrupt 2
 556          {
 557   1              
 558   1      }
 559          
 560          void PinInterrupt_ISR (void) interrupt 7
 561          {
 562   1              if(PIF == 0x10) //pin 0
 563   1                      MOTOR_FG_PinInterrupt_ISR();
 564   1              PIF = 0x00;
 565   1      }
*** WARNING C294 IN LINE 259 OF Code\main.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1268    ----
   CONSTANT SIZE    =     15    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     29       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      6    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  3 WARNING(S),  0 ERROR(S)
