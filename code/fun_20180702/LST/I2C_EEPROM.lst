C51 COMPILER V9.54   I2C_EEPROM                                                            05/23/2018 22:16:11 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE I2C_EEPROM
OBJECT MODULE PLACED IN .\Output\I2C_EEPROM.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE Code\I2C_EEPROM.c OPTIMIZE(9,SIZE) BROWSE INCDIR(..\..\Include;..\Include) 
                    -DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\I2C_EEPROM.lst) TABS(2) OBJECT(.\Output\I2C_EEPROM.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2017 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : Jun/21/2017
  12          //********************************************************************************************************
             -***
  13          
  14          //********************************************************************************************************
             -***
  15          //  File Function: N76E003 I2C demo code, Slave Address of 24LC64 = 0xA0
  16          //
  17          //   ____________           ______________ 
  18          //  |            |   SDA    |             |
  19          //  |            |<-------->|             |
  20          //  |            |          |             |
  21          //  |N76E003(M) |          |   24LC64(S) |
  22          //  |            |   SCL    |             |
  23          //  |            |--------->|             |
  24          //  |____________|          |_____________|
  25          //
  26          //  Microchip I2C EEPROM 24xx64 (64K Bit) is used as the slave device.  
  27          //  The page size are 32Byte. Total are 256 page.
  28          //  If verification passes, Port3 will show 0x78. If there is any failure
  29          //  occured during the progress, Port3 will show 0x00.
  30          //********************************************************************************************************
             -***
  31          
  32          #include "N76E003.h"
  33          #include "SFR_Macro.h"
  34          #include "Function_define.h"
  35          #include "Common.h"
  36          #include "Delay.h"
  37          
  38          #define I2C_CLOCK               2
  39          
  40          
  41          bit I2C_Reset_Flag;
  42          //========================================================================================================
  43          void Init_I2C(void)
  44          {
  45   1          P13_OpenDrain_Mode;         // Modify SCL pin to Open drain mode. don't forget the pull high resister in cir
C51 COMPILER V9.54   I2C_EEPROM                                                            05/23/2018 22:16:11 PAGE 2   

             -cuit
  46   1          P14_OpenDrain_Mode;         // Modify SDA pin to Open drain mode. don't forget the pull high resister in cir
             -cuit
  47   1        
  48   1          /* Set I2C clock rate */
  49   1          I2CLK = I2C_CLOCK; 
  50   1      
  51   1          /* Enable I2C */
  52   1          set_I2CEN;                                   
  53   1      }
  54          //========================================================================================================
  55          void I2C_SI_Check(void)
  56          {
  57   1          if (I2STAT == 0x00)
  58   1          {
  59   2              I2C_Reset_Flag = 1;
  60   2              set_STO;
  61   2              SI = 0;
  62   2              if(SI)
  63   2              {
  64   3                  clr_I2CEN;
  65   3                  set_I2CEN;
  66   3                  clr_SI;
  67   3                  clr_I2CEN;    
  68   3              }   
  69   2          } 
  70   1      }
  71          
  72          //========================================================================================================
  73          void IIC_WriteMultiBytes(unsigned char device,unsigned char cmd_data,unsigned char *buf,unsigned char len)
  74          {
  75   1        unsigned char length = 0;
  76   1        if (len == 0)
  77   1          return;
  78   1          /* Step1 */
  79   1          set_STA;                                /* Send Start bit to I2C EEPROM */         
  80   1          clr_SI;
  81   1          while (!SI);
  82   1          if (I2STAT != 0x08)                     /* 0x08:  A START condition has been transmitted*/
  83   1          {
  84   2              I2C_Reset_Flag = 1;
  85   2              goto Write_Error_Stop;
  86   2          }
  87   1      
  88   1          /* Step2 */
  89   1          clr_STA;                                /* Clear STA and Keep SI value in I2CON */
  90   1          I2DAT = device;                 /* Send (SLA+W) to EEPROM */
  91   1          clr_SI;
  92   1          while (!SI);
  93   1          if (I2STAT != 0x18)                     /* 0x18: SLA+W has been transmitted; ACK has been received */ 
             -            
  94   1          {
  95   2              I2C_Reset_Flag = 1;
  96   2              goto Write_Error_Stop;
  97   2          }
  98   1      
  99   1          /* Step3 */
 100   1        while(length<len)
 101   1        {
 102   2          I2DAT = cmd_data << 6;
 103   2          clr_SI;
 104   2          while (!SI);
C51 COMPILER V9.54   I2C_EEPROM                                                            05/23/2018 22:16:11 PAGE 3   

 105   2          if (I2STAT != 0x28)                     /* 0x28:  Data byte in S1DAT has been transmitted; ACK has been 
             -received */
 106   2          {
 107   3            I2C_Reset_Flag = 1;
 108   3            goto Write_Error_Stop;
 109   3          }
 110   2          I2DAT = buf[length];
 111   2          clr_SI;
 112   2          while (!SI);
 113   2          if (I2STAT != 0x28)                     /* 0x28:  Data byte in S1DAT has been transmitted; ACK has been 
             -received */
 114   2          {
 115   3            I2C_Reset_Flag = 1;
 116   3            goto Write_Error_Stop;
 117   3          }
 118   2        }
 119   1          /* Step7 */
 120   1          set_STO;                                /* Set STOP Bit to I2C EEPROM */
 121   1          clr_SI;
 122   1        while (STO)                        /* Check STOP signal */
 123   1        {
 124   2          I2C_SI_Check();
 125   2          if (I2C_Reset_Flag)
 126   2            goto Write_Error_Stop;
 127   2        }
 128   1          
 129   1        Write_Error_Stop: 
 130   1        if (I2C_Reset_Flag)
 131   1        {
 132   2            I2C_SI_Check();
 133   2            I2C_Reset_Flag  = 0;
 134   2        }
 135   1      }
 136          
 137          void IIC_WriteSingleByte(unsigned char device ,unsigned char cmd_data,unsigned char val)
 138          {
 139   1        unsigned char buf;
 140   1        buf = val;
 141   1        IIC_WriteMultiBytes(device,cmd_data,(unsigned char *)&buf,1);
 142   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    184    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
