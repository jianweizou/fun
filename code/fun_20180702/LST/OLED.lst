C51 COMPILER V9.54   OLED                                                                  06/11/2018 21:01:37 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Output\OLED.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE Code\OLED.c OPTIMIZE(8,SIZE) BROWSE INCDIR(..\..\Include;..\Include) DEFINE
                    -(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\OLED.lst) OBJECT(.\Output\OLED.obj)

line level    source

   1          #include "N76E003.h"
   2          #include "Function_define.h"
   3          #include "OLED.h"
   4          #include "Delay.h"
   5          #include "dataflash.h"
   6          
   7          extern void Init_I2C(void);
   8          extern void IIC_WriteMultiBytes(unsigned char device,unsigned char cmd_data,unsigned char *buf,unsigned ch
             -ar len);
   9          extern void IIC_WriteSingleByte(unsigned char device ,unsigned char cmd_data,unsigned char val);
  10          extern void Dvice_WriteData(unsigned char  DeciveAddr,unsigned char  DataAddr,unsigned char);
  11          #define OLED_WR_Byte(val,cmd_data)      Dvice_WriteData(0x78,cmd_data,val)//IIC_WriteSingleByte(0x78,cmd_data,v
             -al)
  12          extern unsigned int powercnt;
  13          unsigned char OLED_Init(void)
  14          {
  15   1              P12_PushPull_Mode;
  16   1              P12 = 0;
  17   1              powercnt = 0;
  18   1              while(powercnt<2);
  19   1              P12 = 1;
  20   1      
  21   1              /* Initial I2C function */
  22   1          Init_I2C(); 
  23   1              powercnt = 0;
  24   1              while(powercnt<2);
  25   1              
  26   1              OLED_WR_Byte(0xAE,OLED_CMD);//--display off
  27   1              OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
  28   1              OLED_WR_Byte(0x12,OLED_CMD);//---set high column address
  29   1              OLED_WR_Byte(0x00,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
  30   1              OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
  31   1              OLED_WR_Byte(0x81,OLED_CMD); // contract control
  32   1              OLED_WR_Byte(0xFF,OLED_CMD);//--128   
  33   1              OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
  34   1              OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
  35   1              OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
  36   1              OLED_WR_Byte(0x1F,OLED_CMD);//--1/32 duty
  37   1              OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
  38   1              OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
  39   1              OLED_WR_Byte(0x00,OLED_CMD);//
  40   1              OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
  41   1              OLED_WR_Byte(0x80,OLED_CMD);//
  42   1              OLED_WR_Byte(0xD9,OLED_CMD);//set pre-charge period
  43   1              OLED_WR_Byte(0x1F,OLED_CMD);//
  44   1              OLED_WR_Byte(0xDA,OLED_CMD);//set COM pins
  45   1              OLED_WR_Byte(0x12,OLED_CMD);//
  46   1              OLED_WR_Byte(0xDB,OLED_CMD);//set vcomh
  47   1              OLED_WR_Byte(0x40,OLED_CMD);//
  48   1              OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
  49   1              OLED_WR_Byte(0x14,OLED_CMD);//
  50   1              OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel      
  51   1              return 0;
  52   1      }
C51 COMPILER V9.54   OLED                                                                  06/11/2018 21:01:37 PAGE 2   

  53          
  54          
  55          void OLED_Set_Pos(unsigned char x, unsigned char y) 
  56          {
  57   1              unsigned char x0;
  58   1              x0=x+32;
  59   1              OLED_WR_Byte(0xb0+y,OLED_CMD);
  60   1              OLED_WR_Byte(((x0&0xf0)>>4)|0x10,OLED_CMD);
  61   1              OLED_WR_Byte((x0&0x0f),OLED_CMD); 
  62   1      }         
  63            
  64          void OLED_Display_On(void)
  65          {
  66   1              OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC??
  67   1              OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
  68   1              OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
  69   1      }
  70            
  71          void OLED_Display_Off(void)
  72          {
  73   1              OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC??
  74   1              OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
  75   1              OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
  76   1      }                                        
  77          void OLED_Clear(void)  
  78          {  
  79   1              unsigned char i,n;                  
  80   1              for(i=0;i<4;i++)  
  81   1              {  
  82   2                      OLED_WR_Byte (0xb0+i,OLED_CMD);
  83   2                      OLED_WR_Byte (0x00,OLED_CMD);     
  84   2                      OLED_WR_Byte (0x12,OLED_CMD);    
  85   2                      for(n=32;n<96;n++)
  86   2                              OLED_WR_Byte(0,OLED_DATA); 
  87   2              } 
  88   1      }
  89          
  90          
  91          void OLED_CLS_Windows(unsigned char x0,unsigned char y0,unsigned char x1,unsigned char y1)
  92          {
  93   1              unsigned int j=0;
  94   1              unsigned char x,y;
  95   1      
  96   1              if(y1%8==0)
  97   1                      y=y1/8;      
  98   1              else 
  99   1                      y=y1/8+1;
 100   1              for(y=y0;y<y1;y++)
 101   1              {
 102   2                      OLED_Set_Pos(x0,y);
 103   2                      for(x=x0;x<x1;x++)
 104   2                  {      
 105   3                              OLED_WR_Byte(0x00,OLED_DATA);
 106   3                  }
 107   2              }       
 108   1      }
 109          
 110          
 111          void Draw_BMP(unsigned char x0, unsigned char y0, unsigned char x1, unsigned char y1,unsigned char * BMP)
 112          {
 113   1              unsigned int j=0;
 114   1              unsigned char x,y;
C51 COMPILER V9.54   OLED                                                                  06/11/2018 21:01:37 PAGE 3   

 115   1      
 116   1              if(y1%8==0)
 117   1                      y=y1/8;      
 118   1              else 
 119   1                      y=y1/8+1;
 120   1              for(y=y0;y<y1;y++)
 121   1              {
 122   2                      OLED_Set_Pos(x0,y);
 123   2                      for(x=x0;x<x1;x++)
 124   2                  {      
 125   3                              OLED_WR_Byte(BMP[j++],OLED_DATA);
 126   3                  }
 127   2              }
 128   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    615    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      22
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
