C51 COMPILER V9.54   MAIN                                                                  03/23/2019 16:15:05 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Output\main.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE Code\main.c ROM(COMPACT) OPTIMIZE(8,SIZE) BROWSE INCDIR(..\..\Include;..\In
                    -clude) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\main.lst) OBJECT(.\Output\main.obj)

line level    source

   1          
   2          #include "N76E003.h"
   3          #include "SFR_Macro.h"
   4          #include "Function_define.h"
   5          #include "dataflash.h"
   6          #include "key.h"
   7          #include "motor.h"
   8          #include "led.h"
   9          
  10          #define TH0_INIT        (65536-6667)/256 //5.0ms@XTAL=12MHz, Period = (10.85/2) ms@XTAL=22.1184MHz
  11          #define TL0_INIT        (65536-6667)%256
  12          #define TH1_INIT        0xE0 //2.5ms@XTAL=12MHz, Period = (5.425/2) ms@XTAL=22.1184MHz
  13          #define TL1_INIT        0x00
  14          
  15          bit BIT_TMP;
  16          
  17          unsigned char is_5ms_Flag;
  18          unsigned int dpdtime;
  19          #define ADC_CNT 8
  20          unsigned char adccnt;
  21          unsigned int adc[ADC_CNT];
  22          unsigned char batlevel;
  23          unsigned int batlevelledtimeout;
  24          unsigned int adcvalue;
  25          extern unsigned char Motor_Level;
  26          extern unsigned int led_display_time;
  27          /********************************/
  28          #define Stage_A         1
  29          #define Stage_B         2
  30          #define Stage_C         4
  31          #define Stage_D         8
  32          
  33          unsigned char system_stage;
  34          bit isneedinitstage;
  35          bit isneedinitbatled;
  36          bit isneedinitsys;
  37          bit ischarging;
  38          bit isstartsystem;
  39          unsigned char startADC_cnt;
  40          unsigned char batlevel_led_value;
  41          unsigned char led_type;
  42          unsigned char adc_pre_cnt;
  43          /*******************************/
  44          
  45          
  46          /*********************************************************************************************************
             -***
  47          *    TIMER 0 interrupt subroutine
  48          **********************************************************************************************************
             -**/
  49          void Timer0_ISR (void) interrupt 1          //interrupt address is 0x000B
  50          {
  51   1          TH0 = TH0_INIT;
  52   1          TL0 = TL0_INIT;
C51 COMPILER V9.54   MAIN                                                                  03/23/2019 16:15:05 PAGE 2   

  53   1              is_5ms_Flag = 1;
  54   1              dpdtime++;
  55   1              startADC_cnt ++;
  56   1              led_display_time++;
  57   1              if (isStartMotor)
  58   1                      Motor_done_cnt++;
  59   1      }
  60          
  61          void Timer0_Init(void)
  62          {
  63   1              TMOD = 0XFF;
  64   1              TIMER0_MODE1_ENABLE;                        //Timer 0  mode configuration
  65   1          
  66   1              clr_T0M;
  67   1          
  68   1              TH0 = TH0_INIT;
  69   1              TL0 = TL0_INIT;
  70   1          
  71   1              set_ET0;                                    //enable Timer0 interrupt
  72   1              set_EA;                                     //enable interrupts
  73   1              
  74   1              set_TR0;                                    //Timer0 run
  75   1      }
  76          
  77          unsigned int getadcvalue(void)
  78          {
  79   1              unsigned char i;
  80   1              unsigned int adcvalue;
  81   1              adcvalue = 0;
  82   1              for(i=0;i<ADC_CNT;i++)
  83   1              {
  84   2                      adcvalue += adc[i];
  85   2              }
  86   1              adcvalue >>=3;
  87   1              return adcvalue;
  88   1      }
  89          
  90          
  91          unsigned char getbatlevel(void)
  92          {
  93   1              unsigned char templevel;
  94   1              unsigned char i;
  95   1              unsigned char cur_pwm_level;
  96   1              if (startADC_cnt > 0)
  97   1              {
  98   2                      startADC_cnt = 0;
  99   2                      clr_ADCF;
 100   2                      set_ADCS;                                                                       // ADC start trig signal
 101   2                      while(ADCF == 0);
 102   2                      adcvalue = ADCRH;
 103   2                      adcvalue <<= 4;
 104   2                      adcvalue |= ADCRL&0x0F;
 105   2                      adc[adccnt] = adcvalue;
 106   2                      adccnt++;
 107   2                      if (adccnt >= ADC_CNT)
 108   2                      {
 109   3                              adccnt = 0;
 110   3                              adcvalue = getadcvalue();
 111   3                              i = get_motor_level();
 112   3                              if (i == 1)
 113   3                              {
 114   4                                      cur_pwm_level = cur_pwm();
C51 COMPILER V9.54   MAIN                                                                  03/23/2019 16:15:05 PAGE 3   

 115   4      //                              if (cur_pwm_level == 0)
 116   4      //                                      adcvalue = adcvalue + 0x30;
 117   4      //                              else
 118   4                                      if (cur_pwm_level == 1)
 119   4                                              adcvalue = adcvalue + 0x08;
 120   4                                      else if (cur_pwm_level == 2)
 121   4                                              adcvalue = adcvalue + 0x10;
 122   4                                      else
 123   4                                              adcvalue = adcvalue + 0x20;
 124   4                              }
 125   3                              else if (i == 2)
 126   3                              {
 127   4                                      adcvalue = adcvalue + 0x10;
 128   4                              }
 129   3                              else if (i == 4)
 130   3                              {
 131   4                                      adcvalue = adcvalue + 0x08;
 132   4                              }
 133   3                              if (ischarging)
 134   3                              {
 135   4                                      if (batlevel < 3)
 136   4                                              adcvalue = adcvalue - 0x50;
 137   4                                      else if (batlevel < 5)
 138   4                                              adcvalue = adcvalue - 0x40;
 139   4                                      else
 140   4                                              adcvalue = adcvalue - 0x30;     //0x90 -> 0.3v
 141   4                              }
 142   3                              if (adcvalue > 0xD08)           //100% 8.2
 143   3                              {
 144   4                                      templevel = 6;
 145   4                              }
 146   3                              else if (adcvalue > 0xCA0)      //>75%  8v              
 147   3                              {
 148   4                                      templevel = 5;
 149   4                              }
 150   3                              else if (adcvalue > 0xC40)      //>50%  7.7v
 151   3                              {
 152   4                                      templevel = 4;
 153   4                              }
 154   3                              else if (adcvalue > 0xBE0)      //>25%  7.5
 155   3                              {
 156   4                                      templevel = 3;
 157   4                              }
 158   3                              else if (adcvalue > 0xBA0)      //10%   7.2v
 159   3                              {
 160   4                                      templevel = 2;
 161   4                              }
 162   3                              else
 163   3                              {
 164   4                                      templevel = 1;
 165   4                              }
 166   3      //                      else if (adcvalue < 0xA00)
 167   3      //                      {
 168   3      //                              templevel = 0;
 169   3      //                      }
 170   3      //                      if (adc_pre_cnt > 4)
 171   3      //                      {
 172   3      //                              adc_pre_cnt = 10;
 173   3      //                              if (ischarging)
 174   3      //                              {
 175   3      //                                      if (templevel >= batlevel)
 176   3      //                                              batlevel = templevel;
C51 COMPILER V9.54   MAIN                                                                  03/23/2019 16:15:05 PAGE 4   

 177   3      //                              }
 178   3      //                              else
 179   3      //                              {
 180   3      //                                      if (templevel <= batlevel)
 181   3      //                                              batlevel = templevel;
 182   3      //                              }
 183   3      //                      }
 184   3      //                      else
 185   3                                      batlevel = templevel;
 186   3                              adc_pre_cnt++;
 187   3      //                      batlevel_led_value = batlevel_to_led_value();
 188   3                              return 1;
 189   3                      }
 190   2              }       
 191   1              return 0;
 192   1      }
 193          
 194          
 195          void SysInit(void)
 196          {
 197   1              Init_LED();
 198   1              Timer0_Init();  
 199   1              startADC_cnt = 0;
 200   1              adccnt = 0;
 201   1              KeyInit();      
 202   1              InitPWM();
 203   1              system_stage = Stage_A;
 204   1              isneedinitstage = 1;
 205   1              led_type = 0; 
 206   1              isneedinitbatled = 0;
 207   1              batlevelledtimeout = 0; 
 208   1              batlevel_led_value = 0;
 209   1              ischarging = 0;
 210   1              adc_pre_cnt = 0;
 211   1      //      P07_PushPull_Mode;
 212   1      //      P07 = 1;
 213   1      //      P07_Input_Mode;
 214   1              Enable_ADC_AIN2;
 215   1              if (isstartsystem == 0)
 216   1              {
 217   2                      while(dpdtime<60)
 218   2                      {
 219   3                              getbatlevel();
 220   3      //                      startADC_cnt++;
 221   3                      }
 222   2                      isstartsystem = 1;
 223   2              }
 224   1              else
 225   1              {
 226   2                      while(dpdtime<10)
 227   2                      {
 228   3                              getbatlevel();
 229   3                      }               
 230   2              }
 231   1              dpdtime = 0;
 232   1              led_display_time = 0;
 233   1              startADC_cnt = 0;
 234   1      //      while(1)
 235   1      //      {
 236   1      //              if (getbatlevel() == 1)
 237   1      //                      break;
 238   1      //      }
C51 COMPILER V9.54   MAIN                                                                  03/23/2019 16:15:05 PAGE 5   

 239   1      }
 240          
 241          void main(void)
 242          {
 243   1              unsigned char keystatus,i;
 244   1              Set_All_GPIO_Quasi_Mode;
 245   1              isneedinitsys = 1;
 246   1              isstartsystem = 0;
 247   1              while(1)
 248   1              {
 249   2                      if (isneedinitsys)
 250   2                      {
 251   3                              SysInit();
 252   3                              isneedinitsys = 0;
 253   3                      }
 254   2                      if (is_5ms_Flag)
 255   2                      {
 256   3                              if (batlevelledtimeout)
 257   3                                      batlevelledtimeout--;
 258   3                              keystatus = KeyScan();
 259   3                              if (system_stage == Stage_A)
 260   3                              {
 261   4                                      if (isneedinitstage == 1)
 262   4                                      {
 263   5                                              isneedinitstage = 0;
 264   5                                              //init stage A
 265   5                                              LED_Setting(0,0);
 266   5                                              LED_RGB_Setting(0,0);
 267   5                                              led_type = 0;
 268   5                                              dpdtime = 0;
 269   5                                              ischarging = 0;
 270   5                                      }
 271   4                                      if (keystatus & 0x01)//key
 272   4                                      {
 273   5                                              //display power as LED
 274   5                                              led_type = 1;
 275   5                                              isneedinitbatled = 1;
 276   5                                              batlevelledtimeout = 600;
 277   5                                              LED_Setting(system_stage,batlevel);
 278   5                                      }
 279   4                                      if (keystatus & 0x02)
 280   4                                      {
 281   5                                              system_stage = Stage_B;
 282   5                                              isneedinitstage = 1;
 283   5                                      }
 284   4                                      if (keystatus & 0x04)
 285   4                                      {
 286   5                                              if (system_stage == Stage_B)
 287   5                                                      system_stage = Stage_D;
 288   5                                              else
 289   5                                                      system_stage = Stage_C;
 290   5                                              isneedinitstage = 1;
 291   5                                      }                       
 292   4                              }
 293   3                              else if (system_stage == Stage_B)
 294   3                              {
 295   4                                      if (isneedinitstage == 1)
 296   4                                      {
 297   5                                              isneedinitstage = 0;
 298   5                                              //init stage B
 299   5                                              led_type = 2;   
 300   5                                              isneedinitbatled = 1;
C51 COMPILER V9.54   MAIN                                                                  03/23/2019 16:15:05 PAGE 6   

 301   5                                              dpdtime = 0;
 302   5                                              ischarging = 0;                 
 303   5                                      }
 304   4                                      if (keystatus & 0x01)//key
 305   4                                      {
 306   5                                              //change pwm
 307   5                                              i  = Change_Motor_PWM();
 308   5                                              LED_RGB_Setting(i,0);
 309   5                                              if (i == 0)
 310   5                                                      LED_Setting(0,0);
 311   5                                              else
 312   5                                                      LED_Setting(system_stage,batlevel);
 313   5                                      }
 314   4                                      if (keystatus & 0x02)//safety
 315   4                                      {
 316   5                                      }
 317   4                                      else
 318   4                                      {
 319   5                                              system_stage = Stage_A;
 320   5                                              isneedinitstage = 1;
 321   5                                              //turn off pwm
 322   5                                              TurnOffMotor();
 323   5                                              LED_RGB_Setting(0,0);
 324   5                                              LED_Setting(0,0);
 325   5                                      }
 326   4                                      
 327   4                                      if (keystatus & 0x04)//charging
 328   4                                      {
 329   5                                              if (system_stage == Stage_A)
 330   5                                              {
 331   6                                                      system_stage = Stage_C;
 332   6                                              }
 333   5                                              else
 334   5                                                      system_stage = Stage_D;
 335   5      //                                      TurnOffMotor();
 336   5      //                                      LED_RGB_Setting(0,0);
 337   5                                              isneedinitstage = 1;
 338   5                                      }
 339   4                                      
 340   4                                      if (keystatus & 0x08)
 341   4                                      {
 342   5                                              //turn off pwm
 343   5                                              TurnOffMotor();
 344   5                                              LED_RGB_Setting(0,0);
 345   5                                              LED_Setting(0,0);
 346   5                                      }
 347   4                                      
 348   4                              }
 349   3                              else if (system_stage == Stage_C)
 350   3                              {
 351   4                                      if (isneedinitstage == 1)
 352   4                                      {
 353   5                                              isneedinitstage = 0;
 354   5                                              //init stage C
 355   5                                              led_type = 3;   
 356   5                                              isneedinitbatled = 1;
 357   5                                              dpdtime = 0;
 358   5                                              ischarging = 1;
 359   5                                              LED_Setting(system_stage,batlevel);
 360   5                                              //turn off pwm
 361   5      //                                      TurnOffMotor();
 362   5      //                                      LED_RGB_Setting(0,0);
C51 COMPILER V9.54   MAIN                                                                  03/23/2019 16:15:05 PAGE 7   

 363   5                                      }
 364   4                                      if (keystatus & 0x01)//key
 365   4                                      {
 366   5                                              
 367   5                                      }
 368   4                                      if (keystatus & 0x02)//safety
 369   4                                      {
 370   5                                              //enter stage_B
 371   5                                              system_stage = Stage_D;
 372   5                                              isneedinitstage = 1;
 373   5                                      }
 374   4                                      
 375   4                                      if (keystatus & 0x04)//charging
 376   4                                      {
 377   5                                              dpdtime = 0;
 378   5                                      }
 379   4                                      else
 380   4                                      {
 381   5                                              if (system_stage == Stage_D)
 382   5                                              {
 383   6                                                      system_stage = Stage_B;
 384   6                                              }
 385   5                                              else
 386   5                                              {
 387   6                                                      system_stage = Stage_A;
 388   6                                                      LED_Setting(0,0);
 389   6                                              }
 390   5                                              isneedinitstage = 1;
 391   5                                      }
 392   4                              }
 393   3                              else if (system_stage == Stage_D)
 394   3                              {
 395   4                                      if (isneedinitstage == 1)
 396   4                                      {
 397   5                                              isneedinitstage = 0;
 398   5                                              isneedinitbatled = 1;
 399   5                                              //init stage D
 400   5                                              led_type = 3;
 401   5                                              dpdtime = 0;
 402   5                                              ischarging = 1;
 403   5                                              LED_Setting(system_stage,batlevel);
 404   5                                      }
 405   4                                      if (keystatus & 0x01)//key
 406   4                                      {
 407   5                                              //change pwm
 408   5                                              i  = Change_Motor_PWM();
 409   5                                              LED_RGB_Setting(i,0);
 410   5                                      }
 411   4                                      if (keystatus & 0x02)//safety
 412   4                                      {
 413   5                                      }
 414   4                                      else
 415   4                                      {
 416   5                                              system_stage = Stage_C;
 417   5                                              isneedinitstage = 1;
 418   5                                              TurnOffMotor();
 419   5                                              LED_RGB_Setting(0,0);
 420   5                                      }
 421   4                                      
 422   4                                      if (keystatus & 0x04)//charging
 423   4                                      {
 424   5                                              dpdtime = 0;
C51 COMPILER V9.54   MAIN                                                                  03/23/2019 16:15:05 PAGE 8   

 425   5                                      }
 426   4                                      else
 427   4                                      {
 428   5                                              if (system_stage == Stage_C)
 429   5                                              {
 430   6                                                      system_stage = Stage_A;
 431   6                                              }
 432   5                                              else
 433   5                                              {
 434   6                                                      system_stage = Stage_B;
 435   6                                                      i = get_motor_level();
 436   6                                                      LED_RGB_Setting(i,0);
 437   6                                                      if (i == 0)
 438   6                                                              LED_Setting(0,0);
 439   6                                                      else
 440   6                                                              LED_Setting(system_stage,batlevel);
 441   6                                              }
 442   5                                              isneedinitstage = 1;    
 443   5      //                                      TurnOffMotor(); 
 444   5      //                                      LED_RGB_Setting(0,0);
 445   5                                      }
 446   4                                      
 447   4                                      if (keystatus & 0x08)
 448   4                                      {
 449   5                                              //turn off pwm
 450   5                                              TurnOffMotor();
 451   5                                              LED_RGB_Setting(0,0);
 452   5                                      }
 453   4                              }
 454   3                              
 455   3                              //ADC process
 456   3                              getbatlevel();
 457   3                              /*
 458   3                              if (led_type)
 459   3                              {
 460   3                                      if(isneedinitbatled && batlevel_led_value)
 461   3                                      {
 462   3                                              i = led_type - 1;
 463   3                                              LED_WHITE_Setting(batlevel_led_value,i);
 464   3                                              isneedinitbatled = 0;
 465   3                                      }
 466   3                                      if(batlevelledtimeout==0)
 467   3                                      {
 468   3                                              if (led_type == 1)
 469   3                                              {
 470   3                                                      led_type = 0;
 471   3                                                      LED_WHITE_Setting(0,0);
 472   3                                              }
 473   3                                      }
 474   3                              }
 475   3                              */
 476   3                              //pwm rate
 477   3                              if (check_motor_done())
 478   3                              {
 479   4                                      //turn off pwm
 480   4                                      TurnOffMotor();
 481   4                                      LED_RGB_Setting(0,0);
 482   4                                      LED_Setting(0,0);
 483   4                                      //goto stage A,B
 484   4                                      #warning "change stage to A or B"
*** WARNING C320 IN LINE 484 OF Code\main.c: "change stage to A or B"
 485   4                              }
C51 COMPILER V9.54   MAIN                                                                  03/23/2019 16:15:05 PAGE 9   

 486   3                              if(get_motor_level())
 487   3                              {
 488   4                                      dpdtime = 0;
 489   4                              }
 490   3                              //LED_Process           
 491   3                              LED_Process(system_stage,batlevel_led_value);
 492   3                              
 493   3                              //dpd
 494   3                              if (dpdtime >= 2000)
 495   3                              {
 496   4                                      dpdtime = 0;
 497   4                                      //enter dpd
 498   4                                      //
 499   4                                      Set_All_GPIO_Quasi_Mode;
 500   4                                      clr_ADCEN;
 501   4                                      
 502   4                                      TurnOffMotor();
 503   4                                      LED_WHITE_Setting(0,0);
 504   4                                      LED_RGB_Setting(0,0);
 505   4                                      DeInit_LED();
*** WARNING C206 IN LINE 505 OF Code\main.c: 'DeInit_LED': missing function-prototype
 506   4                                      
 507   4                                      P17_Input_Mode;
 508   4                                      set_P1S_7;
 509   4                                      set_EX1;
 510   4                                                                      
 511   4                                      set_PD;
 512   4      
 513   4                                      PICON  = 0;
 514   4                                                              
 515   4                                      clr_EX0;
 516   4                                      clr_EX1;
 517   4                                      clr_EPI;
 518   4                                      isneedinitsys = 1;
 519   4                              }
 520   3                      }
 521   2              }
 522   1      }
 523          
 524          void EXT_INT1(void) interrupt 2
 525          {
 526   1              
 527   1      }
 528          
 529          void PinInterrupt_ISR (void) interrupt 7
 530          {
 531   1              if(PIF == 0x10) //pin 0
 532   1                      MOTOR_FG_PinInterrupt_ISR();
 533   1              PIF = 0x00;
 534   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1147    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     30       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      6    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
