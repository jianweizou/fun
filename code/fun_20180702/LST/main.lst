C51 COMPILER V9.54   MAIN                                                                  02/23/2019 16:46:27 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Output\main.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE Code\main.c ROM(COMPACT) OPTIMIZE(8,SIZE) BROWSE INCDIR(..\..\Include;..\In
                    -clude) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\main.lst) OBJECT(.\Output\main.obj)

line level    source

   1          
   2          #include "N76E003.h"
   3          #include "SFR_Macro.h"
   4          #include "Function_define.h"
   5          #include "dataflash.h"
   6          #include "key.h"
   7          #include "motor.h"
   8          #include "led.h"
   9          
  10          #define TH0_INIT        (65536-6667)/256 //5.0ms@XTAL=12MHz, Period = (10.85/2) ms@XTAL=22.1184MHz
  11          #define TL0_INIT        (65536-6667)%256
  12          #define TH1_INIT        0xE0 //2.5ms@XTAL=12MHz, Period = (5.425/2) ms@XTAL=22.1184MHz
  13          #define TL1_INIT        0x00
  14          
  15          bit BIT_TMP;
  16          
  17          unsigned char is_5ms_Flag;
  18          unsigned int dpdtime;
  19          unsigned char getbattery_time;
  20          #define ADC_CNT 12
  21          unsigned char adccnt;
  22          unsigned int adc[ADC_CNT];
  23          unsigned char batlevel;
  24          unsigned char batlevelledtimeout;
  25          extern unsigned char Motor_Level;
  26          extern unsigned int led_display_time;
  27          /********************************/
  28          #define Stage_A         1
  29          #define Stage_B         2
  30          #define Stage_C         4
  31          #define Stage_D         8
  32          
  33          unsigned char system_stage;
  34          bit isneedinitstage;
  35          bit isneedinitbatled;
  36          bit isneedinitsys;
  37          bit ischarging;
  38          unsigned char startADC_cnt;
  39          unsigned char batlevel_led_value;
  40          unsigned char led_type;
  41          unsigned char adc_pre_cnt;
  42          /*******************************/
  43          
  44          
  45          /*********************************************************************************************************
             -***
  46          *    TIMER 0 interrupt subroutine
  47          **********************************************************************************************************
             -**/
  48          void Timer0_ISR (void) interrupt 1          //interrupt address is 0x000B
  49          {
  50   1          TH0 = TH0_INIT;
  51   1          TL0 = TL0_INIT;
  52   1              is_5ms_Flag = 1;
C51 COMPILER V9.54   MAIN                                                                  02/23/2019 16:46:27 PAGE 2   

  53   1              dpdtime++;
  54   1              getbattery_time++;
  55   1              startADC_cnt ++;
  56   1              led_display_time++;
  57   1              if (isStartMotor)
  58   1                      Motor_done_cnt++;
  59   1      }
  60          
  61          void Timer0_Init(void)
  62          {
  63   1              TMOD = 0XFF;
  64   1              TIMER0_MODE1_ENABLE;                        //Timer 0  mode configuration
  65   1          
  66   1              clr_T0M;
  67   1          
  68   1              TH0 = TH0_INIT;
  69   1              TL0 = TL0_INIT;
  70   1          
  71   1              set_ET0;                                    //enable Timer0 interrupt
  72   1              set_EA;                                     //enable interrupts
  73   1              
  74   1              set_TR0;                                    //Timer0 run
  75   1      }
  76          
  77          unsigned int getadcvalue(void)
  78          {
  79   1              unsigned char i;
  80   1              unsigned int adcvalue;
  81   1              adcvalue = 0;
  82   1              for(i=4;i<ADC_CNT;i++)
  83   1              {
  84   2                      adcvalue += adc[i];
  85   2              }
  86   1              adcvalue >>=3;
  87   1              return adcvalue;
  88   1      }
  89          
  90          unsigned char batlevel_to_led_value(void)
  91          {
  92   1              unsigned char val;
  93   1              if (batlevel == 4)
  94   1              {
  95   2                      val = 0x0F;
  96   2              }
  97   1              else if (batlevel == 3)
  98   1              {
  99   2                      val = 0x07;
 100   2              }
 101   1              else if (batlevel == 2)
 102   1              {
 103   2                      val = 0x03;
 104   2              }
 105   1              else //if (batlevel == 1)
 106   1              {
 107   2                      val = 0x01;
 108   2              }
 109   1              return val;
 110   1      }
 111          
 112          unsigned char getbatlevel(void)
 113          {
 114   1              unsigned int adcvalue;
C51 COMPILER V9.54   MAIN                                                                  02/23/2019 16:46:27 PAGE 3   

 115   1              unsigned char templevel;
 116   1              unsigned char i;
 117   1              if (startADC_cnt > 0)
 118   1              {
 119   2                      startADC_cnt = 0;
 120   2                      clr_ADCF;
 121   2                      set_ADCS;                                                                       // ADC start trig signal
 122   2                      while(ADCF == 0);
 123   2                      adcvalue = ADCRH;
 124   2                      adcvalue <<= 4;
 125   2                      adcvalue |= ADCRL&0x0F;
 126   2                      adc[adccnt] = adcvalue;
 127   2                      adccnt++;
 128   2                      if (adccnt >= ADC_CNT)
 129   2                      {
 130   3                              adccnt = 0;
 131   3                              adcvalue = getadcvalue();
 132   3                              i = get_motor_level();
 133   3                              if (i == 4)
 134   3                              {
 135   4                                      adcvalue = adcvalue + 0x20;
 136   4                              }
 137   3                              else if (i == 2)
 138   3                              {
 139   4                                      adcvalue = adcvalue + 0x10;
 140   4                              }
 141   3                              else if (i == 1)
 142   3                              {
 143   4                                      adcvalue = adcvalue + 0x08;
 144   4                              }
 145   3                              if (ischarging)
 146   3                              {
 147   4                                      adcvalue = adcvalue - 0xA0;     //0x90 -> 0.3v
 148   4                              }
 149   3                              if (adcvalue > 0xCD0)   //>75%  8v              
 150   3                              {
 151   4                                      templevel = 4;
 152   4                              }
 153   3                              else if (adcvalue > 0xC70)      //>50%  7.7v
 154   3                              {
 155   4                                      templevel = 3;
 156   4                              }
 157   3                              else if (adcvalue > 0xC00)      //>25%  7.4
 158   3                              {
 159   4                                      templevel = 2;
 160   4                              }
 161   3                              else if (adcvalue < 0xB80)      //<25%  7v
 162   3                              {
 163   4                                      templevel = 1;
 164   4                              }
 165   3      //                      if (adc_pre_cnt > 4)
 166   3      //                      {
 167   3      //                              adc_pre_cnt = 10;
 168   3      //                              if (ischarging)
 169   3      //                              {
 170   3      //                                      if (templevel >= batlevel)
 171   3      //                                              batlevel = templevel;
 172   3      //                              }
 173   3      //                              else
 174   3      //                              {
 175   3      //                                      if (templevel <= batlevel)
 176   3      //                                              batlevel = templevel;
C51 COMPILER V9.54   MAIN                                                                  02/23/2019 16:46:27 PAGE 4   

 177   3      //                              }
 178   3      //                      }
 179   3      //                      else
 180   3                                      batlevel = templevel;
 181   3                              adc_pre_cnt++;
 182   3                              batlevel_led_value = batlevel_to_led_value();
 183   3                              return 1;
 184   3                      }
 185   2              }       
 186   1              return 0;
 187   1      }
 188          
 189          
 190          void SysInit(void)
 191          {
 192   1              Init_LED();
 193   1              Timer0_Init();
 194   1              Enable_ADC_AIN2;
 195   1              startADC_cnt = 0;
 196   1              adccnt = 0;
 197   1              KeyInit();      
 198   1              InitPWM();
 199   1              system_stage = Stage_A;
 200   1              isneedinitstage = 1;
 201   1              led_type = 0; 
 202   1              isneedinitbatled = 0;
 203   1              batlevelledtimeout = 0; 
 204   1              batlevel_led_value = 0;
 205   1              ischarging = 0;
 206   1              adc_pre_cnt = 0;
 207   1      //      while(1)
 208   1      //      {
 209   1      //              if (getbatlevel() == 1)
 210   1      //                      break;
 211   1      //      }
 212   1      }
 213          
 214          void main(void)
 215          {
 216   1              unsigned char keystatus,i;
 217   1              Set_All_GPIO_Quasi_Mode;
 218   1              isneedinitsys = 1;
 219   1              while(1)
 220   1              {
 221   2                      if (isneedinitsys)
 222   2                      {
 223   3                              SysInit();
 224   3                              isneedinitsys = 0;
 225   3                      }
 226   2                      if (is_5ms_Flag)
 227   2                      {
 228   3                              if (batlevelledtimeout)
 229   3                                      batlevelledtimeout--;
 230   3                              keystatus = KeyScan();
 231   3                              if (system_stage == Stage_A)
 232   3                              {
 233   4                                      if (isneedinitstage == 1)
 234   4                                      {
 235   5                                              isneedinitstage = 0;
 236   5                                              //init stage A
 237   5                                              LED_WHITE_Setting(0,0);
 238   5                                              LED_RGB_Setting(0,0);
C51 COMPILER V9.54   MAIN                                                                  02/23/2019 16:46:27 PAGE 5   

 239   5                                              led_type = 0;
 240   5                                              dpdtime = 0;
 241   5                                              ischarging = 0;
 242   5                                      }
 243   4                                      if (keystatus & 0x01)//key
 244   4                                      {
 245   5                                              //display power as LED
 246   5                                              led_type = 1;
 247   5                                              isneedinitbatled = 1;
 248   5                                              batlevelledtimeout = 200;
 249   5                                      }
 250   4                                      if (keystatus & 0x02)
 251   4                                      {
 252   5                                              system_stage = Stage_B;
 253   5                                              isneedinitstage = 1;
 254   5                                      }
 255   4                                      if (keystatus & 0x04)
 256   4                                      {
 257   5                                              if (system_stage == Stage_B)
 258   5                                                      system_stage = Stage_D;
 259   5                                              else
 260   5                                                      system_stage = Stage_C;
 261   5                                              isneedinitstage = 1;
 262   5                                      }                       
 263   4                              }
 264   3                              else if (system_stage == Stage_B)
 265   3                              {
 266   4                                      if (isneedinitstage == 1)
 267   4                                      {
 268   5                                              isneedinitstage = 0;
 269   5                                              //init stage B
 270   5                                              led_type = 2;   
 271   5                                              isneedinitbatled = 1;
 272   5                                              dpdtime = 0;
 273   5                                              ischarging = 0;
 274   5                                      }
 275   4                                      if (keystatus & 0x01)//key
 276   4                                      {
 277   5                                              //change pwm
 278   5                                              i  = Change_Motor_PWM();
 279   5                                              LED_RGB_Setting(i,0);
 280   5                                      }
 281   4                                      if (keystatus & 0x02)//safety
 282   4                                      {
 283   5                                      }
 284   4                                      else
 285   4                                      {
 286   5                                              system_stage = Stage_A;
 287   5                                              isneedinitstage = 1;
 288   5                                              //turn off pwm
 289   5                                              TurnOffMotor();
 290   5                                      }
 291   4                                      
 292   4                                      if (keystatus & 0x04)//charging
 293   4                                      {
 294   5                                              if (system_stage == Stage_A)
 295   5                                              {
 296   6                                                      system_stage = Stage_C;
 297   6                                              }
 298   5                                              else
 299   5                                                      system_stage = Stage_D;
 300   5                                              TurnOffMotor();
C51 COMPILER V9.54   MAIN                                                                  02/23/2019 16:46:27 PAGE 6   

 301   5                                              isneedinitstage = 1;
 302   5                                      }
 303   4                                      
 304   4                                      if (keystatus & 0x08)
 305   4                                      {
 306   5                                              //turn off pwm
 307   5                                              TurnOffMotor();
 308   5                                              LED_RGB_Setting(0,0);
 309   5                                      }
 310   4                                      
 311   4                              }
 312   3                              else if (system_stage == Stage_C)
 313   3                              {
 314   4                                      if (isneedinitstage == 1)
 315   4                                      {
 316   5                                              isneedinitstage = 0;
 317   5                                              //init stage C
 318   5                                              led_type = 3;   
 319   5                                              isneedinitbatled = 1;
 320   5                                              dpdtime = 0;
 321   5                                              ischarging = 1;
 322   5                                              //turn off pwm
 323   5                                      }
 324   4                                      if (keystatus & 0x01)//key
 325   4                                      {
 326   5                                              
 327   5                                      }
 328   4                                      if (keystatus & 0x02)//safety
 329   4                                      {
 330   5                                              //enter stage_B
 331   5                                              system_stage = Stage_D;
 332   5                                              isneedinitstage = 1;
 333   5                                      }
 334   4                                      
 335   4                                      if (keystatus & 0x04)//charging
 336   4                                      {
 337   5                                              dpdtime = 0;
 338   5                                      }
 339   4                                      else
 340   4                                      {
 341   5                                              if (system_stage == Stage_D)
 342   5                                              {
 343   6                                                      system_stage = Stage_B;
 344   6                                              }
 345   5                                              else
 346   5                                                      system_stage = Stage_A;
 347   5                                              isneedinitstage = 1;
 348   5                                      }
 349   4                              }
 350   3                              else if (system_stage == Stage_D)
 351   3                              {
 352   4                                      if (isneedinitstage == 1)
 353   4                                      {
 354   5                                              isneedinitstage = 0;
 355   5                                              isneedinitbatled = 1;
 356   5                                              //init stage D
 357   5                                              led_type = 3;
 358   5                                              dpdtime = 0;
 359   5                                              ischarging = 1;
 360   5                                      }
 361   4                                      if (keystatus & 0x01)//key
 362   4                                      {
C51 COMPILER V9.54   MAIN                                                                  02/23/2019 16:46:27 PAGE 7   

 363   5                                              //change pwm
 364   5                                              i  = Change_Motor_PWM();
 365   5                                              LED_RGB_Setting(i,0);
 366   5                                      }
 367   4                                      if (keystatus & 0x02)//safety
 368   4                                      {
 369   5                                      }
 370   4                                      else
 371   4                                      {
 372   5                                              system_stage = Stage_C;
 373   5                                              isneedinitstage = 1;
 374   5                                              TurnOffMotor();
 375   5                                      }
 376   4                                      
 377   4                                      if (keystatus & 0x04)//charging
 378   4                                      {
 379   5                                              dpdtime = 0;
 380   5                                      }
 381   4                                      else
 382   4                                      {
 383   5                                              if (system_stage == Stage_C)
 384   5                                              {
 385   6                                                      system_stage = Stage_A;
 386   6                                              }
 387   5                                              else
 388   5                                                      system_stage = Stage_B;
 389   5                                              isneedinitstage = 1;    
 390   5                                              TurnOffMotor();                         
 391   5                                      }
 392   4                                      
 393   4                                      if (keystatus & 0x08)
 394   4                                      {
 395   5                                              //turn off pwm
 396   5                                              TurnOffMotor();
 397   5                                              LED_RGB_Setting(0,0);
 398   5                                      }
 399   4                              }
 400   3                              
 401   3                              //ADC process
 402   3                              getbatlevel();
 403   3                              if (led_type)
 404   3                              {
 405   4                                      if(isneedinitbatled && batlevel_led_value)
 406   4                                      {
 407   5                                              i = led_type - 1;
 408   5                                              LED_WHITE_Setting(batlevel_led_value,i);
 409   5                                              isneedinitbatled = 0;
 410   5                                      }
 411   4                                      if(batlevelledtimeout==0)
 412   4                                      {
 413   5                                              if (led_type == 1)
 414   5                                              {
 415   6                                                      led_type = 0;
 416   6                                                      LED_WHITE_Setting(0,0);
 417   6                                              }
 418   5                                      }
 419   4                              }
 420   3                              //pwm rate
 421   3                              if (check_motor_done())
 422   3                              {
 423   4                                      //turn off pwm
 424   4                                      TurnOffMotor();
C51 COMPILER V9.54   MAIN                                                                  02/23/2019 16:46:27 PAGE 8   

 425   4                                      LED_RGB_Setting(0,0);
 426   4                                      //goto stage A,B
 427   4                                      #warning "change stage to A or B"
*** WARNING C320 IN LINE 427 OF Code\main.c: "change stage to A or B"
 428   4                              }
 429   3                              if(get_motor_level())
 430   3                              {
 431   4                                      dpdtime = 0;
 432   4                              }
 433   3                              //LED_Process           
 434   3                              LED_Process(batlevel_led_value);
 435   3                              
 436   3                              //dpd
 437   3                              if (dpdtime >= 2000)
 438   3                              {
 439   4                                      dpdtime = 0;
 440   4                                      //enter dpd
 441   4                                      //
 442   4                                      TurnOffMotor();
 443   4                                      LED_WHITE_Setting(0,0);
 444   4                                      LED_RGB_Setting(0,0);
 445   4                                      
 446   4                                      P17_Input_Mode;
 447   4                                      set_P1S_7;
 448   4                                      set_EX1;
 449   4                                      
 450   4      //                              set_P0SR_5;
 451   4      //                              PICON = 0x00;   //port0
 452   4      //                              PINEN  = 0x20;
 453   4      //                              PIPEN = 0x00;
 454   4                                      
 455   4                                      set_PD;
 456   4                                      
 457   4      //                              clr_EA;
 458   4      //                              for(i=0;i<0xA0;i++);
 459   4                                      PICON  = 0;
 460   4                                                              
 461   4                                      clr_EX0;
 462   4                                      clr_EX1;
 463   4                                      clr_EPI;
 464   4                                      isneedinitsys = 1;
 465   4                              }
 466   3                      }
 467   2              }
 468   1      }
 469          
 470          void EXT_INT1(void) interrupt 2
 471          {
 472   1              
 473   1      }
 474          
 475          void PinInterrupt_ISR (void) interrupt 7
 476          {
 477   1              if(PIF == 0x10) //pin 0
 478   1                      MOTOR_FG_PinInterrupt_ISR();
 479   1              PIF = 0x00;
 480   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    975    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.54   MAIN                                                                  02/23/2019 16:46:27 PAGE 9   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     36       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
