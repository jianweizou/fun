C51 COMPILER V9.54   MAIN                                                                  02/16/2019 16:02:37 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Output\main.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE Code\main.c ROM(COMPACT) OPTIMIZE(8,SIZE) BROWSE INCDIR(..\..\Include;..\In
                    -clude) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\main.lst) OBJECT(.\Output\main.obj)

line level    source

   1          
   2          #include "N76E003.h"
   3          #include "SFR_Macro.h"
   4          #include "Function_define.h"
   5          #include "dataflash.h"
   6          #include "key.h"
   7          #include "motor.h"
   8          #include "led.h"
   9          
  10          #define TH0_INIT        (65536-6667)/256 //5.0ms@XTAL=12MHz, Period = (10.85/2) ms@XTAL=22.1184MHz
  11          #define TL0_INIT        (65536-6667)%256
  12          #define TH1_INIT        0xE0 //2.5ms@XTAL=12MHz, Period = (5.425/2) ms@XTAL=22.1184MHz
  13          #define TL1_INIT        0x00
  14          
  15          bit BIT_TMP;
  16          
  17          unsigned char is_5ms_Flag;
  18          unsigned int dpdtime;
  19          unsigned char getbattery_time;
  20          #define ADC_CNT 12
  21          unsigned char adccnt;
  22          unsigned int adc[ADC_CNT];
  23          unsigned char batlevel;
  24          unsigned char batlevelledtimeout;
  25          extern unsigned char Motor_Level;
  26          extern unsigned int led_display_time;
  27          /********************************/
  28          #define Stage_A         1
  29          #define Stage_B         2
  30          #define Stage_C         4
  31          #define Stage_D         8
  32          
  33          unsigned char system_stage;
  34          bit isneedinitstage;
  35          bit isneedinitbatled;
  36          bit isneedinitsys;
  37          bit ischarging;
  38          unsigned char startADC_cnt;
  39          unsigned char batlevel_led_value;
  40          unsigned char led_type;
  41          /*******************************/
  42          
  43          
  44          /*********************************************************************************************************
             -***
  45          *    TIMER 0 interrupt subroutine
  46          **********************************************************************************************************
             -**/
  47          void Timer0_ISR (void) interrupt 1          //interrupt address is 0x000B
  48          {
  49   1          TH0 = TH0_INIT;
  50   1          TL0 = TL0_INIT;
  51   1              is_5ms_Flag = 1;
  52   1              dpdtime++;
C51 COMPILER V9.54   MAIN                                                                  02/16/2019 16:02:37 PAGE 2   

  53   1              getbattery_time++;
  54   1              startADC_cnt ++;
  55   1              led_display_time++;
  56   1              if (isStartMotor)
  57   1                      Motor_done_cnt++;
  58   1      }
  59          
  60          void Timer0_Init(void)
  61          {
  62   1              TMOD = 0XFF;
  63   1              TIMER0_MODE1_ENABLE;                        //Timer 0  mode configuration
  64   1          
  65   1              clr_T0M;
  66   1          
  67   1              TH0 = TH0_INIT;
  68   1              TL0 = TL0_INIT;
  69   1          
  70   1              set_ET0;                                    //enable Timer0 interrupt
  71   1              set_EA;                                     //enable interrupts
  72   1              
  73   1              set_TR0;                                    //Timer0 run
  74   1      }
  75          
  76          unsigned int getadcvalue(void)
  77          {
  78   1              unsigned char i;
  79   1              unsigned int adcvalue;
  80   1              adcvalue = 0;
  81   1              for(i=4;i<ADC_CNT;i++)
  82   1              {
  83   2                      adcvalue += adc[i];
  84   2              }
  85   1              adcvalue >>=3;
  86   1              return adcvalue;
  87   1      }
  88          
  89          unsigned char batlevel_to_led_value(void)
  90          {
  91   1              unsigned char val;
  92   1              if (batlevel == 4)
  93   1              {
  94   2                      val = 0x0F;
  95   2              }
  96   1              else if (batlevel == 3)
  97   1              {
  98   2                      val = 0x07;
  99   2              }
 100   1              else if (batlevel == 2)
 101   1              {
 102   2                      val = 0x03;
 103   2              }
 104   1              else //if (batlevel == 1)
 105   1              {
 106   2                      val = 0x01;
 107   2              }
 108   1              return val;
 109   1      }
 110          
 111          unsigned char getbatlevel(void)
 112          {
 113   1              unsigned int adcvalue;
 114   1              unsigned char i;
C51 COMPILER V9.54   MAIN                                                                  02/16/2019 16:02:37 PAGE 3   

 115   1              if (startADC_cnt > 1)
 116   1              {
 117   2                      startADC_cnt = 0;
 118   2                      clr_ADCF;
 119   2                      set_ADCS;                                                                       // ADC start trig signal
 120   2                      while(ADCF == 0);
 121   2                      adcvalue = ADCRH;
 122   2                      adcvalue <<= 4;
 123   2                      adcvalue |= ADCRL&0x0F;
 124   2                      adc[adccnt] = adcvalue;
 125   2                      adccnt++;
 126   2                      if (adccnt >= ADC_CNT)
 127   2                      {
 128   3                              adccnt = 0;
 129   3                              adcvalue = getadcvalue();
 130   3                              i = get_motor_level();
 131   3                              if (i == 4)
 132   3                              {
 133   4                                      adcvalue = adcvalue + 0x20;
 134   4                              }
 135   3                              else if (i == 2)
 136   3                              {
 137   4                                      adcvalue = adcvalue + 0x10;
 138   4                              }
 139   3                              else if (i == 1)
 140   3                              {
 141   4                                      adcvalue = adcvalue + 0x08;
 142   4                              }
 143   3                              if (ischarging)
 144   3                              {
 145   4                                      adcvalue = adcvalue - 0xA0;     //0x90 -> 0.3v
 146   4                              }
 147   3                              if (adcvalue > 0xCD0)   //>75%  8v              
 148   3                              {
 149   4                                      batlevel = 4;
 150   4                              }
 151   3                              else if (adcvalue > 0xC70)      //>50%  7.7v
 152   3                              {
 153   4                                      batlevel = 3;
 154   4                              }
 155   3                              else if (adcvalue > 0xC00)      //>25%  7.4
 156   3                              {
 157   4                                      batlevel = 2;
 158   4                              }
 159   3                              else if (adcvalue < 0xB80)      //<25%  7v
 160   3                              {
 161   4                                      batlevel = 1;
 162   4                              }
 163   3                              batlevel_led_value = batlevel_to_led_value();
 164   3                              return 1;
 165   3                      }
 166   2              }       
 167   1              return 0;
 168   1      }
 169          
 170          
 171          void SysInit(void)
 172          {
 173   1              Init_LED();
 174   1              Timer0_Init();
 175   1              Enable_ADC_AIN2;
 176   1              startADC_cnt = 0;
C51 COMPILER V9.54   MAIN                                                                  02/16/2019 16:02:37 PAGE 4   

 177   1              adccnt = 0;
 178   1              KeyInit();      
 179   1              InitPWM();
 180   1              system_stage = Stage_A;
 181   1              isneedinitstage = 1;
 182   1              led_type = 0;
 183   1              isneedinitbatled = 0;
 184   1              batlevelledtimeout = 0; 
 185   1              batlevel_led_value = 0;
 186   1              ischarging = 0;
 187   1      //      while(1)
 188   1      //      {
 189   1      //              if (getbatlevel() == 1)
 190   1      //                      break;
 191   1      //      }
 192   1      }
 193          
 194          void main(void)
 195          {
 196   1              unsigned char keystatus,i;
 197   1              Set_All_GPIO_Quasi_Mode;
 198   1              isneedinitsys = 1;
 199   1              while(1)
 200   1              {
 201   2                      if (isneedinitsys)
 202   2                      {
 203   3                              SysInit();
 204   3                              isneedinitsys = 0;
 205   3                      }
 206   2                      if (is_5ms_Flag)
 207   2                      {
 208   3                              if (batlevelledtimeout)
 209   3                                      batlevelledtimeout--;
 210   3                              keystatus = KeyScan();
 211   3                              if (system_stage == Stage_A)
 212   3                              {
 213   4                                      if (isneedinitstage == 1)
 214   4                                      {
 215   5                                              isneedinitstage = 0;
 216   5                                              //init stage A
 217   5                                              LED_WHITE_Setting(0,0);
 218   5                                              LED_RGB_Setting(0,0);
 219   5                                              led_type = 0;
 220   5                                              dpdtime = 0;
 221   5                                              ischarging = 0;
 222   5                                      }
 223   4                                      if (keystatus & 0x01)//key
 224   4                                      {
 225   5                                              //display power as LED
 226   5                                              led_type = 1;
 227   5                                              isneedinitbatled = 1;
 228   5                                              batlevelledtimeout = 200;
 229   5                                      }
 230   4                                      if (keystatus & 0x02)
 231   4                                      {
 232   5                                              system_stage = Stage_B;
 233   5                                              isneedinitstage = 1;
 234   5                                      }
 235   4                                      if (keystatus & 0x04)
 236   4                                      {
 237   5                                              if (system_stage == Stage_B)
 238   5                                                      system_stage = Stage_D;
C51 COMPILER V9.54   MAIN                                                                  02/16/2019 16:02:37 PAGE 5   

 239   5                                              else
 240   5                                                      system_stage = Stage_C;
 241   5                                              isneedinitstage = 1;
 242   5                                      }                       
 243   4                              }
 244   3                              else if (system_stage == Stage_B)
 245   3                              {
 246   4                                      if (isneedinitstage == 1)
 247   4                                      {
 248   5                                              isneedinitstage = 0;
 249   5                                              //init stage B
 250   5                                              led_type = 2;   
 251   5                                              isneedinitbatled = 1;
 252   5                                              dpdtime = 0;
 253   5                                              ischarging = 0;
 254   5                                      }
 255   4                                      if (keystatus & 0x01)//key
 256   4                                      {
 257   5                                              //change pwm
 258   5                                              i  = Change_Motor_PWM();
 259   5                                              LED_RGB_Setting(i,0);
 260   5                                      }
 261   4                                      if (keystatus & 0x02)//safety
 262   4                                      {
 263   5                                      }
 264   4                                      else
 265   4                                      {
 266   5                                              system_stage = Stage_A;
 267   5                                              isneedinitstage = 1;
 268   5                                              //turn off pwm
 269   5                                              TurnOffMotor();
 270   5                                      }
 271   4                                      
 272   4                                      if (keystatus & 0x04)//charging
 273   4                                      {
 274   5                                              if (system_stage == Stage_A)
 275   5                                              {
 276   6                                                      system_stage = Stage_C;
 277   6                                              }
 278   5                                              else
 279   5                                                      system_stage = Stage_D;
 280   5                                              TurnOffMotor();
 281   5                                              isneedinitstage = 1;
 282   5                                      }
 283   4                                      
 284   4                                      if (keystatus & 0x08)
 285   4                                      {
 286   5                                              //turn off pwm
 287   5                                              TurnOffMotor();
 288   5                                              LED_RGB_Setting(0,0);
 289   5                                      }
 290   4                                      
 291   4                              }
 292   3                              else if (system_stage == Stage_C)
 293   3                              {
 294   4                                      if (isneedinitstage == 1)
 295   4                                      {
 296   5                                              isneedinitstage = 0;
 297   5                                              //init stage C
 298   5                                              led_type = 3;   
 299   5                                              isneedinitbatled = 1;
 300   5                                              dpdtime = 0;
C51 COMPILER V9.54   MAIN                                                                  02/16/2019 16:02:37 PAGE 6   

 301   5                                              ischarging = 1;
 302   5                                              //turn off pwm
 303   5                                      }
 304   4                                      if (keystatus & 0x01)//key
 305   4                                      {
 306   5                                              
 307   5                                      }
 308   4                                      if (keystatus & 0x02)//safety
 309   4                                      {
 310   5                                              //enter stage_B
 311   5                                              system_stage = Stage_D;
 312   5                                              isneedinitstage = 1;
 313   5                                      }
 314   4                                      
 315   4                                      if (keystatus & 0x04)//charging
 316   4                                      {
 317   5                                              dpdtime = 0;
 318   5                                      }
 319   4                                      else
 320   4                                      {
 321   5                                              if (system_stage == Stage_D)
 322   5                                              {
 323   6                                                      system_stage = Stage_B;
 324   6                                              }
 325   5                                              else
 326   5                                                      system_stage = Stage_A;
 327   5                                              isneedinitstage = 1;
 328   5                                      }
 329   4                              }
 330   3                              else if (system_stage == Stage_D)
 331   3                              {
 332   4                                      if (isneedinitstage == 1)
 333   4                                      {
 334   5                                              isneedinitstage = 0;
 335   5                                              isneedinitbatled = 1;
 336   5                                              //init stage D
 337   5                                              led_type = 3;
 338   5                                              dpdtime = 0;
 339   5                                              ischarging = 1;
 340   5                                      }
 341   4                                      if (keystatus & 0x01)//key
 342   4                                      {
 343   5                                              //change pwm
 344   5                                              i  = Change_Motor_PWM();
 345   5                                              LED_RGB_Setting(i,0);
 346   5                                      }
 347   4                                      if (keystatus & 0x02)//safety
 348   4                                      {
 349   5                                      }
 350   4                                      else
 351   4                                      {
 352   5                                              system_stage = Stage_C;
 353   5                                              isneedinitstage = 1;
 354   5                                              TurnOffMotor();
 355   5                                      }
 356   4                                      
 357   4                                      if (keystatus & 0x04)//charging
 358   4                                      {
 359   5                                              dpdtime = 0;
 360   5                                      }
 361   4                                      else
 362   4                                      {
C51 COMPILER V9.54   MAIN                                                                  02/16/2019 16:02:37 PAGE 7   

 363   5                                              if (system_stage == Stage_C)
 364   5                                              {
 365   6                                                      system_stage = Stage_A;
 366   6                                              }
 367   5                                              else
 368   5                                                      system_stage = Stage_B;
 369   5                                              isneedinitstage = 1;    
 370   5                                              TurnOffMotor();                         
 371   5                                      }
 372   4                                      
 373   4                                      if (keystatus & 0x08)
 374   4                                      {
 375   5                                              //turn off pwm
 376   5                                              TurnOffMotor();
 377   5                                              LED_RGB_Setting(0,0);
 378   5                                      }
 379   4                              }
 380   3                              
 381   3                              //ADC process
 382   3                              getbatlevel();
 383   3                              if (led_type)
 384   3                              {
 385   4                                      if(isneedinitbatled && batlevel_led_value)
 386   4                                      {
 387   5                                              i = led_type - 1;
 388   5                                              LED_WHITE_Setting(batlevel_led_value,i);
 389   5                                              isneedinitbatled = 0;
 390   5                                      }
 391   4                                      if(batlevelledtimeout==0)
 392   4                                      {
 393   5                                              if (led_type == 1)
 394   5                                              {
 395   6                                                      led_type = 0;
 396   6                                                      LED_WHITE_Setting(0,0);
 397   6                                              }
 398   5                                      }
 399   4                              }
 400   3                              //pwm rate
 401   3                              if (check_motor_done())
 402   3                              {
 403   4                                      //turn off pwm
 404   4                                      TurnOffMotor();
 405   4                                      LED_RGB_Setting(0,0);
 406   4                                      //goto stage A,B
 407   4                                      #warning "change stage to A or B"
*** WARNING C320 IN LINE 407 OF Code\main.c: "change stage to A or B"
 408   4                              }
 409   3                              if(get_motor_level())
 410   3                              {
 411   4                                      dpdtime = 0;
 412   4                              }
 413   3                              //LED_Process           
 414   3                              LED_Process(batlevel_led_value);
 415   3                              
 416   3                              //dpd
 417   3                              if (dpdtime >= 2000)
 418   3                              {
 419   4                                      dpdtime = 0;
 420   4                                      //enter dpd
 421   4                                      //
 422   4                                      TurnOffMotor();
 423   4                                      LED_WHITE_Setting(0,0);
C51 COMPILER V9.54   MAIN                                                                  02/16/2019 16:02:37 PAGE 8   

 424   4                                      LED_RGB_Setting(0,0);
 425   4                                      
 426   4                                      P17_Input_Mode;
 427   4                                      set_P1S_7;
 428   4                                      set_EX1;
 429   4                                      
 430   4      //                              set_P0SR_5;
 431   4      //                              PICON = 0x00;   //port0
 432   4      //                              PINEN  = 0x20;
 433   4      //                              PIPEN = 0x00;
 434   4                                      
 435   4                                      set_PD;
 436   4                                      
 437   4      //                              clr_EA;
 438   4      //                              for(i=0;i<0xA0;i++);
 439   4                                      PICON  = 0;
 440   4                                                              
 441   4                                      clr_EX0;
 442   4                                      clr_EX1;
 443   4                                      clr_EPI;
 444   4                                      isneedinitsys = 1;
 445   4                              }
 446   3                      }
 447   2              }
 448   1      }
 449          
 450          void EXT_INT1(void) interrupt 2
 451          {
 452   1              
 453   1      }
 454          
 455          void PinInterrupt_ISR (void) interrupt 7
 456          {
 457   1              if(PIF == 0x10) //pin 0
 458   1                      MOTOR_FG_PinInterrupt_ISR();
 459   1              PIF = 0x00;
 460   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    968    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     35       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
