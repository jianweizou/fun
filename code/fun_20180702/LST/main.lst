C51 COMPILER V9.54   MAIN                                                                  05/19/2019 14:10:07 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Output\main.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE Code\main.c ROM(COMPACT) OPTIMIZE(8,SIZE) BROWSE INCDIR(..\..\Include;..\In
                    -clude) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\main.lst) OBJECT(.\Output\main.obj)

line level    source

   1          
   2          #include "N76E003.h"
   3          #include "SFR_Macro.h"
   4          #include "Function_define.h"
   5          #include "dataflash.h"
   6          #include "key.h"
   7          #include "motor.h"
   8          #include "led.h"
   9          
  10          #define TH0_INIT        (65536-6667)/256 //5.0ms@XTAL=12MHz, Period = (10.85/2) ms@XTAL=22.1184MHz
  11          #define TL0_INIT        (65536-6667)%256
  12          #define TH1_INIT        0xE0 //2.5ms@XTAL=12MHz, Period = (5.425/2) ms@XTAL=22.1184MHz
  13          #define TL1_INIT        0x00
  14          
  15          bit BIT_TMP;
  16          
  17          unsigned char is_5ms_Flag;
  18          unsigned int dpdtime;
  19          #define ADC_CNT 8
  20          unsigned char adccnt;
  21          unsigned int adc[ADC_CNT];
  22          unsigned char batlevel;
  23          unsigned int batlevelledtimeout;
  24          unsigned int adcvalue;
  25          extern unsigned char Motor_Level;
  26          extern unsigned int led_display_time;
  27          /********************************/
  28          #define Stage_A         1
  29          #define Stage_B         2
  30          #define Stage_C         4
  31          #define Stage_D         8
  32          
  33          unsigned char system_stage;
  34          bit isneedinitstage;
  35          bit isneedinitbatled;
  36          bit isneedinitsys;
  37          bit ischarging;
  38          bit isstartsystem;
  39          unsigned char startADC_cnt;
  40          unsigned char batlevel_led_value;
  41          unsigned char led_type;
  42          unsigned char adc_pre_cnt;
  43          /*******************************/
  44          
  45          
  46          /*********************************************************************************************************
             -***
  47          *    TIMER 0 interrupt subroutine
  48          **********************************************************************************************************
             -**/
  49          void Timer0_ISR (void) interrupt 1          //interrupt address is 0x000B
  50          {
  51   1          TH0 = TH0_INIT;
  52   1          TL0 = TL0_INIT;
C51 COMPILER V9.54   MAIN                                                                  05/19/2019 14:10:07 PAGE 2   

  53   1              is_5ms_Flag = 1;
  54   1              dpdtime++;
  55   1              startADC_cnt ++;
  56   1              led_display_time++;
  57   1              if (isStartMotor)
  58   1                      Motor_done_cnt++;
  59   1      }
  60          
  61          void Timer0_Init(void)
  62          {
  63   1              TMOD = 0XFF;
  64   1              TIMER0_MODE1_ENABLE;                        //Timer 0  mode configuration
  65   1          
  66   1              clr_T0M;
  67   1          
  68   1              TH0 = TH0_INIT;
  69   1              TL0 = TL0_INIT;
  70   1          
  71   1              set_ET0;                                    //enable Timer0 interrupt
  72   1              set_EA;                                     //enable interrupts
  73   1              
  74   1              set_TR0;                                    //Timer0 run
  75   1      }
  76          
  77          unsigned int getadcvalue(void)
  78          {
  79   1              unsigned char i;
  80   1              unsigned int adcvalue;
  81   1              adcvalue = 0;
  82   1              for(i=0;i<ADC_CNT;i++)
  83   1              {
  84   2                      adcvalue += adc[i];
  85   2              }
  86   1              adcvalue >>=3;
  87   1              return adcvalue;
  88   1      }
  89          
  90          
  91          unsigned char getbatlevel(void)
  92          {
  93   1              unsigned char templevel;
  94   1              unsigned char i;
  95   1              unsigned char cur_pwm_level;
  96   1              if (startADC_cnt > 0)
  97   1              {
  98   2                      startADC_cnt = 0;
  99   2                      clr_ADCF;
 100   2                      set_ADCS;                                                                       // ADC start trig signal
 101   2                      while(ADCF == 0);
 102   2                      adcvalue = ADCRH;
 103   2                      adcvalue <<= 4;
 104   2                      adcvalue |= ADCRL&0x0F;
 105   2                      adc[adccnt] = adcvalue;
 106   2                      adccnt++;
 107   2                      if (adccnt >= ADC_CNT)
 108   2                      {
 109   3                              adccnt = 0;
 110   3                              adcvalue = getadcvalue();
 111   3                              i = get_motor_level();
 112   3                              if (i == 1)
 113   3                              {
 114   4                                      cur_pwm_level = cur_pwm();
C51 COMPILER V9.54   MAIN                                                                  05/19/2019 14:10:07 PAGE 3   

 115   4      //                              if (cur_pwm_level == 0)
 116   4      //                                      adcvalue = adcvalue + 0x30;
 117   4      //                              else
 118   4                                      if (cur_pwm_level == 1)
 119   4                                              adcvalue = adcvalue + 0x08;
 120   4                                      else if (cur_pwm_level == 2)
 121   4                                              adcvalue = adcvalue + 0x10;
 122   4                                      else
 123   4                                              adcvalue = adcvalue + 0x20;
 124   4                              }
 125   3                              else if (i == 2)
 126   3                              {
 127   4                                      adcvalue = adcvalue + 0x10;
 128   4                              }
 129   3                              else if (i == 4)
 130   3                              {
 131   4                                      adcvalue = adcvalue + 0x08;
 132   4                              }
 133   3                              if (ischarging)
 134   3                              {
 135   4                                      if (batlevel < 3)
 136   4                                              adcvalue = adcvalue - 0x50;
 137   4                                      else if (batlevel < 5)
 138   4                                              adcvalue = adcvalue - 0x40;
 139   4                                      else
 140   4                                              adcvalue = adcvalue - 0x30;     //0x90 -> 0.3v
 141   4                              }
 142   3                              if (adcvalue > 0xD20)           //100% 8.2
 143   3                              {
 144   4                                      templevel = 6;
 145   4                              }
 146   3                              else if (adcvalue > 0xCB0)      //>75%  8v              
 147   3                              {
 148   4                                      templevel = 5;
 149   4                              }
 150   3                              else if (adcvalue > 0xC40)      //>50%  7.7v
 151   3                              {
 152   4                                      templevel = 4;
 153   4                              }
 154   3                              else if (adcvalue > 0xBE0)      //>25%  7.5
 155   3                              {
 156   4                                      templevel = 3;
 157   4                              }
 158   3                              else if (adcvalue > 0xBA0)      //10%   7.2v
 159   3                              {
 160   4                                      templevel = 2;
 161   4                              }
 162   3                              else
 163   3                              {
 164   4                                      templevel = 1;
 165   4                              }
 166   3      //                      else if (adcvalue < 0xA00)
 167   3      //                      {
 168   3      //                              templevel = 0;
 169   3      //                      }
 170   3                              if (batlevel != templevel)
 171   3                                      adc_pre_cnt++;
 172   3                              else
 173   3                                      adc_pre_cnt = 0;
 174   3                              if (adc_pre_cnt > 4)
 175   3                              {
 176   4                                      adc_pre_cnt = 0;
C51 COMPILER V9.54   MAIN                                                                  05/19/2019 14:10:07 PAGE 4   

 177   4                                      batlevel = templevel;
 178   4                              }
 179   3      //                      batlevel_led_value = batlevel_to_led_value();
 180   3                              return 1;
 181   3                      }
 182   2              }       
 183   1              return 0;
 184   1      }
 185          
 186          
 187          void SysInit(void)
 188          {
 189   1              Init_LED();
 190   1              Timer0_Init();  
 191   1              startADC_cnt = 0;
 192   1              adccnt = 0;
 193   1              KeyInit();      
 194   1              InitPWM();
 195   1              system_stage = Stage_A;
 196   1              isneedinitstage = 1;
 197   1              led_type = 0; 
 198   1              isneedinitbatled = 0;
 199   1              batlevelledtimeout = 0; 
 200   1              batlevel_led_value = 0;
 201   1              ischarging = 0;
 202   1              adc_pre_cnt = 0;
 203   1      //      P07_PushPull_Mode;
 204   1      //      P07 = 1;
 205   1      //      P07_Input_Mode;
 206   1              Enable_ADC_AIN2;
 207   1              if (isstartsystem == 0)
 208   1              {
 209   2                      while(dpdtime<60)
 210   2                      {
 211   3                              getbatlevel();
 212   3      //                      startADC_cnt++;
 213   3                      }
 214   2                      isstartsystem = 1;
 215   2              }
 216   1              else
 217   1              {
 218   2                      while(dpdtime<10)
 219   2                      {
 220   3                              getbatlevel();
 221   3                      }               
 222   2              }
 223   1              dpdtime = 0;
 224   1              led_display_time = 0;
 225   1              startADC_cnt = 0;
 226   1      //      while(1)
 227   1      //      {
 228   1      //              if (getbatlevel() == 1)
 229   1      //                      break;
 230   1      //      }
 231   1      }
 232          
 233          void P05_wakeup_init(void){
 234   1              P05_Input_Mode;
 235   1              
 236   1              PINEN = 0x20;
 237   1              PIPEN = 0x00;
 238   1              PICON = 0x40;
C51 COMPILER V9.54   MAIN                                                                  05/19/2019 14:10:07 PAGE 5   

 239   1              
 240   1              set_EPI;
 241   1              
 242   1              set_EA;
 243   1      }
 244          
 245          void main(void)
 246          {
 247   1              unsigned char keystatus,i;
 248   1              Set_All_GPIO_Quasi_Mode;
 249   1              isneedinitsys = 1;
 250   1              isstartsystem = 0;
 251   1              while(1)
 252   1              {
 253   2                      if (isneedinitsys)
 254   2                      {
 255   3                              SysInit();
 256   3                              isneedinitsys = 0;
 257   3                      }
 258   2                      if (is_5ms_Flag)
 259   2                      {
 260   3                              if (batlevelledtimeout)
 261   3                                      batlevelledtimeout--;
 262   3                              keystatus = KeyScan();
 263   3                              if (system_stage == Stage_A)
 264   3                              {
 265   4                                      if (isneedinitstage == 1)
 266   4                                      {
 267   5                                              isneedinitstage = 0;
 268   5                                              //init stage A
 269   5                                              LED_Setting(0,0);
 270   5                                              LED_RGB_Setting(0,0);
 271   5                                              led_type = 0;
 272   5                                              dpdtime = 0;
 273   5                                              ischarging = 0;
 274   5                                      }
 275   4                                      if (keystatus & 0x01)//key
 276   4                                      {
 277   5                                              //display power as LED
 278   5                                              led_type = 1;
 279   5                                              isneedinitbatled = 1;
 280   5                                              batlevelledtimeout = 600;
 281   5                                              LED_Setting(system_stage,batlevel);
 282   5                                      }
 283   4                                      if (keystatus & 0x02)
 284   4                                      {
 285   5                                              system_stage = Stage_B;
 286   5                                              isneedinitstage = 1;
 287   5                                      }
 288   4                                      if (keystatus & 0x04)
 289   4                                      {
 290   5                                              if (system_stage == Stage_B)
 291   5                                                      system_stage = Stage_D;
 292   5                                              else
 293   5                                                      system_stage = Stage_C;
 294   5                                              isneedinitstage = 1;
 295   5                                      }                       
 296   4                              }
 297   3                              else if (system_stage == Stage_B)
 298   3                              {
 299   4                                      if (isneedinitstage == 1)
 300   4                                      {
C51 COMPILER V9.54   MAIN                                                                  05/19/2019 14:10:07 PAGE 6   

 301   5                                              isneedinitstage = 0;
 302   5                                              //init stage B
 303   5                                              led_type = 2;   
 304   5                                              isneedinitbatled = 1;
 305   5                                              dpdtime = 0;
 306   5                                              ischarging = 0;                 
 307   5                                      }
 308   4                                      if (keystatus & 0x01)//key
 309   4                                      {
 310   5                                              //change pwm
 311   5                                              i  = Change_Motor_PWM();
 312   5                                              LED_RGB_Setting(i,0);
 313   5                                              if (i == 0)
 314   5                                                      LED_Setting(0,0);
 315   5                                              else
 316   5                                                      LED_Setting(system_stage,batlevel);
 317   5                                      }
 318   4                                      if (keystatus & 0x02)//safety
 319   4                                      {
 320   5                                      }
 321   4                                      else
 322   4                                      {
 323   5                                              system_stage = Stage_A;
 324   5                                              isneedinitstage = 1;
 325   5                                              //turn off pwm
 326   5                                              TurnOffMotor();
 327   5                                              LED_RGB_Setting(0,0);
 328   5                                              LED_Setting(0,0);
 329   5                                      }
 330   4                                      
 331   4                                      if (keystatus & 0x04)//charging
 332   4                                      {
 333   5                                              if (system_stage == Stage_A)
 334   5                                              {
 335   6                                                      system_stage = Stage_C;
 336   6                                              }
 337   5                                              else
 338   5                                                      system_stage = Stage_D;
 339   5      //                                      TurnOffMotor();
 340   5      //                                      LED_RGB_Setting(0,0);
 341   5                                              isneedinitstage = 1;
 342   5                                      }
 343   4                                      
 344   4                                      if (keystatus & 0x08)
 345   4                                      {
 346   5                                              //turn off pwm
 347   5                                              TurnOffMotor();
 348   5                                              LED_RGB_Setting(0,0);
 349   5                                              LED_Setting(0,0);
 350   5                                      }
 351   4                                      
 352   4                              }
 353   3                              else if (system_stage == Stage_C)
 354   3                              {
 355   4                                      if (isneedinitstage == 1)
 356   4                                      {
 357   5                                              isneedinitstage = 0;
 358   5                                              //init stage C
 359   5                                              led_type = 3;   
 360   5                                              isneedinitbatled = 1;
 361   5                                              dpdtime = 0;
 362   5                                              ischarging = 1;
C51 COMPILER V9.54   MAIN                                                                  05/19/2019 14:10:07 PAGE 7   

 363   5                                              LED_Setting(system_stage,batlevel);
 364   5                                              //turn off pwm
 365   5      //                                      TurnOffMotor();
 366   5      //                                      LED_RGB_Setting(0,0);
 367   5                                      }
 368   4                                      if (keystatus & 0x01)//key
 369   4                                      {
 370   5                                              
 371   5                                      }
 372   4                                      if (keystatus & 0x02)//safety
 373   4                                      {
 374   5                                              //enter stage_B
 375   5                                              system_stage = Stage_D;
 376   5                                              isneedinitstage = 1;
 377   5                                      }
 378   4                                      
 379   4                                      if (keystatus & 0x04)//charging
 380   4                                      {
 381   5                                              dpdtime = 0;
 382   5                                      }
 383   4                                      else
 384   4                                      {
 385   5                                              if (system_stage == Stage_D)
 386   5                                              {
 387   6                                                      system_stage = Stage_B;
 388   6                                              }
 389   5                                              else
 390   5                                              {
 391   6                                                      system_stage = Stage_A;
 392   6                                                      LED_Setting(0,0);
 393   6                                              }
 394   5                                              isneedinitstage = 1;
 395   5                                      }
 396   4                              }
 397   3                              else if (system_stage == Stage_D)
 398   3                              {
 399   4                                      if (isneedinitstage == 1)
 400   4                                      {
 401   5                                              isneedinitstage = 0;
 402   5                                              isneedinitbatled = 1;
 403   5                                              //init stage D
 404   5                                              led_type = 3;
 405   5                                              dpdtime = 0;
 406   5                                              ischarging = 1;
 407   5                                              LED_Setting(system_stage,batlevel);
 408   5                                      }
 409   4                                      if (keystatus & 0x01)//key
 410   4                                      {
 411   5                                              //change pwm
 412   5                                              i  = Change_Motor_PWM();
 413   5                                              LED_RGB_Setting(i,0);
 414   5                                      }
 415   4                                      if (keystatus & 0x02)//safety
 416   4                                      {
 417   5                                      }
 418   4                                      else
 419   4                                      {
 420   5                                              system_stage = Stage_C;
 421   5                                              isneedinitstage = 1;
 422   5                                              TurnOffMotor();
 423   5                                              LED_RGB_Setting(0,0);
 424   5                                      }
C51 COMPILER V9.54   MAIN                                                                  05/19/2019 14:10:07 PAGE 8   

 425   4                                      
 426   4                                      if (keystatus & 0x04)//charging
 427   4                                      {
 428   5                                              dpdtime = 0;
 429   5                                      }
 430   4                                      else
 431   4                                      {
 432   5                                              if (system_stage == Stage_C)
 433   5                                              {
 434   6                                                      system_stage = Stage_A;
 435   6                                              }
 436   5                                              else
 437   5                                              {
 438   6                                                      system_stage = Stage_B;
 439   6                                                      i = get_motor_level();
 440   6                                                      LED_RGB_Setting(i,0);
 441   6                                                      if (i == 0)
 442   6                                                              LED_Setting(0,0);
 443   6                                                      else
 444   6                                                              LED_Setting(system_stage,batlevel);
 445   6                                              }
 446   5                                              isneedinitstage = 1;    
 447   5      //                                      TurnOffMotor(); 
 448   5      //                                      LED_RGB_Setting(0,0);
 449   5                                      }
 450   4                                      
 451   4                                      if (keystatus & 0x08)
 452   4                                      {
 453   5                                              //turn off pwm
 454   5                                              TurnOffMotor();
 455   5                                              LED_RGB_Setting(0,0);
 456   5                                      }
 457   4                              }
 458   3                              
 459   3                              //ADC process
 460   3                              getbatlevel();
 461   3                              /*
 462   3                              if (led_type)
 463   3                              {
 464   3                                      if(isneedinitbatled && batlevel_led_value)
 465   3                                      {
 466   3                                              i = led_type - 1;
 467   3                                              LED_WHITE_Setting(batlevel_led_value,i);
 468   3                                              isneedinitbatled = 0;
 469   3                                      }
 470   3                                      if(batlevelledtimeout==0)
 471   3                                      {
 472   3                                              if (led_type == 1)
 473   3                                              {
 474   3                                                      led_type = 0;
 475   3                                                      LED_WHITE_Setting(0,0);
 476   3                                              }
 477   3                                      }
 478   3                              }
 479   3                              */
 480   3                              //pwm rate
 481   3                              if (check_motor_done())
 482   3                              {
 483   4                                      //turn off pwm
 484   4                                      TurnOffMotor();
 485   4                                      LED_RGB_Setting(0,0);
 486   4                                      LED_Setting(0,0);
C51 COMPILER V9.54   MAIN                                                                  05/19/2019 14:10:07 PAGE 9   

 487   4                                      isneedinitstage = 1;
 488   4                                      //goto stage A,B
 489   4                                      #warning "change stage to A or B"
*** WARNING C320 IN LINE 489 OF Code\main.c: "change stage to A or B"
 490   4                              }
 491   3                              if(get_motor_level())
 492   3                              {
 493   4                                      dpdtime = 0;
 494   4                              }
 495   3                              //LED_Process           
 496   3                              LED_Process(system_stage,batlevel_led_value);
 497   3                              
 498   3                              //dpd
 499   3                              if (dpdtime >= 2000)
 500   3                              {
 501   4                                      dpdtime = 0;
 502   4                                      //enter dpd
 503   4                                      //
 504   4                                      Set_All_GPIO_Quasi_Mode;
 505   4                                      clr_ADCEN;
 506   4                                      
 507   4                                      TurnOffMotor();
 508   4                                      LED_WHITE_Setting(0,0);
 509   4                                      LED_RGB_Setting(0,0);
 510   4                                      DeInit_LED();
*** WARNING C206 IN LINE 510 OF Code\main.c: 'DeInit_LED': missing function-prototype
 511   4                                      
 512   4                                      P05_wakeup_init();
 513   4                                      
 514   4                                      P17_Input_Mode;
 515   4                                      set_P1S_7;
 516   4                                      set_EX1;
 517   4                                                                      
 518   4                                      set_PD;
 519   4      
 520   4                                      PICON  = 0;
 521   4                                                              
 522   4                                      clr_EX0;
 523   4                                      clr_EX1;
 524   4                                      clr_EPI;
 525   4                                      isneedinitsys = 1;
 526   4                              }
 527   3                      }
 528   2              }
 529   1      }
 530          
 531          void EXT_INT1(void) interrupt 2
 532          {
 533   1              
 534   1      }
 535          
 536          void PinInterrupt_ISR (void) interrupt 7
 537          {
 538   1              if(PIF == 0x10) //pin 0
 539   1                      MOTOR_FG_PinInterrupt_ISR();
 540   1              PIF = 0x00;
 541   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1194    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.54   MAIN                                                                  05/19/2019 14:10:07 PAGE 10  

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     30       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      6    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
