C51 COMPILER V9.54   MOTOR                                                                 02/26/2019 21:28:47 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MOTOR
OBJECT MODULE PLACED IN .\Output\motor.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE Code\motor.c ROM(COMPACT) OPTIMIZE(8,SIZE) BROWSE INCDIR(..\..\Include;..\I
                    -nclude) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\motor.lst) OBJECT(.\Output\motor.obj)

line level    source

   1          #include "N76E003.h"
   2          #include "SFR_Macro.h"
   3          #include "Function_define.h"
   4          #include "dataflash.h"
   5          #include "motor.h"
   6          
   7          
   8          unsigned char Motor_Level;
   9          extern bit BIT_TMP;
  10          bit isStartMotor;
  11          unsigned char Motor_done_cnt;
  12          
  13          void MOTOR_FG_PinInterrupt_ISR (void)
  14          {
  15   1              Motor_done_cnt = 0;
  16   1      }
  17          
  18          
  19          void InitPWM(void)
  20          {
  21   1              Motor_Level = 0;
  22   1      //    set_PWMRUN;       
  23   1              P12_OpenDrain_Mode;
  24   1              P12 = 1;
  25   1              isStartMotor = 0;
  26   1              Motor_done_cnt = 0;
  27   1              
  28   1              P06_PushPull_Mode;
  29   1              P06 = 0;                        //CW
  30   1              P04_PushPull_Mode;      //motor power
  31   1              P04 = 0;
  32   1      }
  33          
  34          void TurnOffMotor(void)
  35          {
  36   1                      clr_EPI;
  37   1                      //turn off
  38   1                      Motor_Level = 0;
  39   1                      PWM0_P12_OUTPUT_DISABLE;
  40   1                      set_SFRPAGE;
  41   1                      PWM0H = 0x00;
  42   1                      PWM0L = 0x00;   
  43   1                      clr_SFRPAGE;
  44   1                      set_LOAD;
  45   1                      clr_CLRPWM;
  46   1                      //dispower
  47   1                      P12 = 0;        
  48   1                      isStartMotor = 0;
  49   1                      Motor_done_cnt = 0;
  50   1              
  51   1                      P04 = 0;
  52   1                      P06 = 0;
  53   1      }
  54          /*
C51 COMPILER V9.54   MOTOR                                                                 02/26/2019 21:28:47 PAGE 2   

  55          unsigned Change_Motor_PWM(void)
  56          {
  57                  if (Motor_Level == 0)
  58                  {
  59                          //enable FG ext interrupt
  60                          isStartMotor = 1;
  61                          PICON = 0x05;   //port1
  62                          PINEN  = 0x00;
  63                          PIPEN = 0x10;   //IO 4
  64                          set_EPI;                                                        // Enable pin interrupt
  65                          
  66                          Motor_Level = 1;
  67                          //pwm High
  68                          P12 = 0;
  69                          P04 = 1;
  70          //              set_SFRPAGE;
  71          //              PWM0H = 0x00;                                           
  72          //              PWM0L = 0xA6;   
  73          //              clr_SFRPAGE;
  74          //              set_LOAD;
  75          //              set_PWMRUN;                             
  76                  }
  77                  else if (Motor_Level == 1)
  78                  {
  79                          Motor_Level = 2;
  80          
  81                          PWM0_P12_OUTPUT_ENABLE;
  82                          
  83                          PWM_IMDEPENDENT_MODE;
  84                          PWM_CLOCK_FSYS;
  85                          PWMPH = 0x03;
  86                          PWMPL = 0xE7;                                           //0x3E7 = 16KHZ,        0x290=24.46khz
  87                          set_SFRPAGE;                                            //PWM4 and PWM5 duty seting is in SFP page 1
  88                          PWM0H = 0x01;                                           
  89                          PWM0L = 0xF3;
  90                          clr_SFRPAGE;                            
  91                          set_LOAD;
  92                          
  93                          //pwm mid
  94                          set_SFRPAGE;
  95                          PWM0H = 0x00;                                           
  96                          PWM0L = 0xF0;   
  97                          clr_SFRPAGE;
  98                          set_LOAD;
  99                          set_PWMRUN;                     
 100                  }
 101                  else if (Motor_Level == 2)
 102                  {
 103                          Motor_Level = 4;
 104                          //pwm low               
 105                          set_SFRPAGE;
 106                          PWM0H = 0x01;                                           
 107                          PWM0L = 0x80;   
 108                          clr_SFRPAGE;
 109                          set_LOAD;
 110                          set_PWMRUN;             
 111                  }
 112          
 113                  return Motor_Level;
 114          }*/
 115          
 116          unsigned Change_Motor_PWM(void)
C51 COMPILER V9.54   MOTOR                                                                 02/26/2019 21:28:47 PAGE 3   

 117          {
 118   1              if (Motor_Level == 0)
 119   1              {
 120   2                      P06 = 1;
 121   2                      isStartMotor = 1;
 122   2                      PICON = 0x05;   //port1
 123   2                      PINEN  = 0x00;
 124   2                      PIPEN = 0x10;   //IO 4
 125   2                      set_EPI;                                                        // Enable pin interrupt         
 126   2                      
 127   2                      Motor_Level = 1;
 128   2                      P04 = 1;
 129   2                      
 130   2                      //enable PWM0
 131   2                      PWM0_P12_OUTPUT_ENABLE;
 132   2                      
 133   2                      PWM_IMDEPENDENT_MODE;
 134   2                      PWM_CLOCK_FSYS;
 135   2                      PWMPH = 0x03;
 136   2                      PWMPL = 0xE7;                                           //0x3E7 = 16KHZ,        0x290=24.46khz
 137   2                      set_SFRPAGE;                                            //PWM4 and PWM5 duty seting is in SFP page 1
 138   2                      PWM0H = 0x01;                                           
 139   2                      PWM0L = 0xF3;
 140   2                      clr_SFRPAGE;                            
 141   2                      set_LOAD;
 142   2      
 143   2                      //pwm low               
 144   2                      set_SFRPAGE;
 145   2                      PWM0H = 0x01;                                           
 146   2                      PWM0L = 0x80;   
 147   2                      clr_SFRPAGE;
 148   2                      set_LOAD;
 149   2                      set_PWMRUN;     
 150   2              }
 151   1              else if (Motor_Level == 1)
 152   1              {
 153   2                      Motor_Level = 2;
 154   2                      //pwm mid
 155   2                      set_SFRPAGE;
 156   2                      PWM0H = 0x00;                                           
 157   2                      PWM0L = 0xF0;   
 158   2                      clr_SFRPAGE;
 159   2                      set_LOAD;
 160   2                      set_PWMRUN;             
 161   2              }
 162   1              else if (Motor_Level == 2)
 163   1              {
 164   2                      Motor_Level = 4;
 165   2                      PWM0_P12_OUTPUT_DISABLE;
 166   2                      set_SFRPAGE;
 167   2                      PWM0H = 0x00;
 168   2                      PWM0L = 0x00;   
 169   2                      clr_SFRPAGE;
 170   2                      set_LOAD;
 171   2                      clr_CLRPWM;
 172   2                      
 173   2                      //High
 174   2                      P12 = 0;
 175   2              }
 176   1              else if (Motor_Level == 4)
 177   1              {
 178   2                      TurnOffMotor();
C51 COMPILER V9.54   MOTOR                                                                 02/26/2019 21:28:47 PAGE 4   

 179   2              }
 180   1              return Motor_Level;
 181   1      }
 182          
 183          unsigned char get_motor_level(void)
 184          {
 185   1              return Motor_Level;
 186   1      }
 187          
 188          unsigned char check_motor_done(void)
 189          {
 190   1              if (isStartMotor)
 191   1              {
 192   2                      if (Motor_done_cnt > 5)
 193   2                              return 1;
 194   2              }
 195   1              return 0;
 196   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    366    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
