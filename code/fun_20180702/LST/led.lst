C51 COMPILER V9.54   LED                                                                   06/26/2019 22:26:06 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN .\Output\led.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE Code\led.c ROM(COMPACT) OPTIMIZE(8,SIZE) BROWSE INCDIR(..\..\Include;..\Inc
                    -lude) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\led.lst) OBJECT(.\Output\led.obj)

line level    source

   1          
   2          
   3          #include "N76E003.h"
   4          #include "SFR_Macro.h"
   5          #include "Function_define.h"
   6          #include "led.h"
   7          #include "motor.h"
   8          
   9          #define LED1_OUTPUT             P13_PushPull_Mode
  10          #define LED2_OUTPUT             P00_PushPull_Mode
  11          #define LED3_OUTPUT             P01_PushPull_Mode
  12          #define LED4_OUTPUT             P03_PushPull_Mode
  13          #define LED_R_OUTPUT    P10_PushPull_Mode
  14          #define LED_G_OUTPUT    P11_PushPull_Mode
  15          #define LED_B_OUTPUT    P15_PushPull_Mode
  16          
  17          #define LED1_SETTING(x)         P13 = x
  18          #define LED2_SETTING(x)         P00 = x
  19          #define LED3_SETTING(x)         P01 = x
  20          #define LED4_SETTING(x)         P03 = x
  21          #define LED_R_SETTING(x)        P10 = x
  22          #define LED_G_SETTING(x)        P11 = x
  23          #define LED_B_SETTING(x)        P15 = x
  24          
  25          extern unsigned char is_5ms_Flag;
  26          bit led_white_tog;
  27          unsigned int led_display_time = 0;
  28          extern unsigned char batlevel;
  29          void Init_LED(void)
  30          {
  31   1              LED1_OUTPUT;
  32   1              LED2_OUTPUT;
  33   1              LED3_OUTPUT;
  34   1              LED4_OUTPUT;
  35   1              LED1_SETTING(0);
  36   1              LED2_SETTING(0);
  37   1              LED3_SETTING(0);
  38   1              LED4_SETTING(0);        
  39   1              
  40   1              LED_R_OUTPUT;
  41   1              LED_G_OUTPUT;
  42   1              LED_B_OUTPUT;
  43   1              
  44   1              LED_R_SETTING(0);
  45   1              LED_G_SETTING(0);
  46   1              LED_B_SETTING(0);
  47   1      }
  48          
  49          void DeInit_LED(void)
  50          {
  51   1              P13_OpenDrain_Mode;
  52   1              P00_OpenDrain_Mode;
  53   1              P01_OpenDrain_Mode;
  54   1              P03_OpenDrain_Mode;
C51 COMPILER V9.54   LED                                                                   06/26/2019 22:26:06 PAGE 2   

  55   1              P10_OpenDrain_Mode;
  56   1              P11_OpenDrain_Mode;
  57   1              P15_OpenDrain_Mode;
  58   1      }
  59          /*
  60          led_type:       LED Or RGB(0:1)
  61          led_value: led value
  62          led_mode:       Normal or Flash(0:1)
  63          */
  64          void LED_WHITE_Set_value(unsigned char led_value)
  65          {
  66   1              LED1_SETTING(led_value&LED1);
  67   1              led_value = led_value >> 1;
  68   1              LED2_SETTING(led_value&LED1);
  69   1              led_value = led_value >> 1;
  70   1              LED3_SETTING(led_value&LED1);
  71   1              led_value = led_value >> 1;
  72   1              LED4_SETTING(led_value&LED1);   
  73   1      }
  74          void LED_WHITE_Setting(unsigned char led_value)
  75          {
  76   1              LED_WHITE_Set_value(led_value);
  77   1              led_display_time = 0;
  78   1              led_white_tog = 0;
  79   1      }
  80          
  81          void LED_RGB_Set_value(unsigned char led_value)
  82          {
  83   1              LED_R_SETTING(led_value&LEDR);
  84   1              led_value = led_value >> 1;
  85   1              LED_B_SETTING(led_value&LEDR);  
  86   1              led_value = led_value >> 1;     
  87   1              LED_G_SETTING(led_value&LEDR);
  88   1      }
  89          void LED_RGB_Setting(unsigned char led_value)
  90          {
  91   1              LED_RGB_Set_value(led_value);
  92   1      }
  93          
  94          unsigned char batlevel_to_led_value(unsigned char stage)
  95          {
  96   1              unsigned char val;
  97   1              if (stage == 1)//stage A
  98   1              {
  99   2                      if (batlevel >= 5)
 100   2                      {
 101   3                              val = 0x0F;
 102   3                      }
 103   2                      else if (batlevel == 4)
 104   2                      {
 105   3                              val = 0x07;
 106   3                      }
 107   2                      else if (batlevel == 3)
 108   2                      {
 109   3                              val = 0x03;
 110   3                      }
 111   2                      /*
 112   2                      else if (batlevel == 2)
 113   2                      {
 114   2                              val = 0x01;
 115   2                      }
 116   2                      else
C51 COMPILER V9.54   LED                                                                   06/26/2019 22:26:06 PAGE 3   

 117   2                      {
 118   2                              val = 0x00;
 119   2                      }*/
 120   2                      else
 121   2                      {
 122   3                              val = 0x01;
 123   3                      }
 124   2              }
 125   1              else if (stage == 4)//stage C
 126   1              {
 127   2                      if (batlevel >= 6)      //100%
 128   2                              val = 0x0F;
 129   2                      else if (batlevel == 5) //>75%
 130   2                      {
 131   3                              val = 0x07;
 132   3                      }
 133   2                      else if (batlevel == 4) //50%
 134   2                      {
 135   3                              val = 0x03;
 136   3                      }
 137   2                      else if (batlevel == 3) //25
 138   2                      {
 139   3                              val = 0x01;
 140   3                      }
 141   2                      else
 142   2                              val = 0;
 143   2              }
 144   1              else if (stage == 2)//stage B
 145   1              {
 146   2                      if (batlevel >= 5)      //>75%
 147   2                      {
 148   3                              val = 0x0F;
 149   3                      }
 150   2                      else if (batlevel == 4)//>50%
 151   2                      {
 152   3                              val = 0x07;
 153   3                      }
 154   2                      else if (batlevel == 3)//>25%
 155   2                      {
 156   3                              val = 0x03;
 157   3                      }
 158   2                      else if (batlevel == 2)//>10%
 159   2                      {
 160   3                              val = 0x01;
 161   3                      }
 162   2                      else if (batlevel == 1)//<10%
 163   2                      {
 164   3                              val = 0x00;
 165   3                      }
 166   2              }
 167   1              else if (stage == 8)//stage D
 168   1              {
 169   2                      if (batlevel >= 6)
 170   2                      {
 171   3                              val = 0x0F;
 172   3                      }
 173   2                      else if (batlevel == 5) //>75%
 174   2                      {
 175   3                              val = 0x07;
 176   3                      }
 177   2                      else if (batlevel == 4)//>50%
 178   2                      {
C51 COMPILER V9.54   LED                                                                   06/26/2019 22:26:06 PAGE 4   

 179   3                              val = 0x03;
 180   3                      }
 181   2                      else if (batlevel == 3)//>25%
 182   2                      {
 183   3                              val = 0x01;
 184   3                      }
 185   2                      else    //<25%
 186   2                      {
 187   3                              val = 0;
 188   3                      }
 189   2              }
 190   1              return val;
 191   1      }
 192          
 193          void LED_Setting(unsigned char led_stage)
 194          {
 195   1              unsigned char temp;
 196   1              led_display_time = 0;
 197   1              if (led_stage == 0)
 198   1              {
 199   2                      LED_WHITE_Setting(0);
 200   2              }
 201   1              else if (led_stage == 1)        //stage_A
 202   1              {
 203   2                      temp = batlevel_to_led_value(led_stage);
 204   2                      LED_WHITE_Setting(temp);
 205   2              }
 206   1              else if (led_stage == 4)//stage C
 207   1              {
 208   2                      temp = batlevel_to_led_value(led_stage);
 209   2                      LED_WHITE_Setting(temp);
 210   2              }
 211   1              else if (led_stage == 2)//stage B
 212   1              {
 213   2                      temp = batlevel_to_led_value(led_stage);
 214   2                      if (temp == 0)
 215   2                              LED_WHITE_Setting(1);
 216   2                      else
 217   2                              LED_WHITE_Setting(temp);
 218   2              }
 219   1              else if (led_stage == 8)//stage D
 220   1              {
 221   2                      temp = batlevel_to_led_value(led_stage);
 222   2                      LED_WHITE_Setting(temp);
 223   2              }
 224   1      }
 225          
 226          void LED_Process(unsigned char led_stage)
 227          {
 228   1              unsigned char temp;
 229   1              if (led_stage == 1)     //stage
 230   1              {
 231   2                      if (led_display_time >= 600)
 232   2                      {
 233   3                              led_stage = 0;
 234   3                              LED_WHITE_Setting(0);
 235   3                      }
 236   2              }
 237   1              else if (led_stage == 4)//stage C
 238   1              {
 239   2                      if (led_display_time >= 100)
 240   2                      {
C51 COMPILER V9.54   LED                                                                   06/26/2019 22:26:06 PAGE 5   

 241   3                              led_display_time = 0;
 242   3                              if (led_white_tog == 0)
 243   3                              {
 244   4                                      led_white_tog = 1;
 245   4                                      led_display_time = 1;
 246   4                                      temp = batlevel_to_led_value(led_stage);
 247   4                                      temp = (temp<<1) + 1;
 248   4                                      LED_WHITE_Set_value(temp);
 249   4                              }
 250   3                              else
 251   3                              {
 252   4                                      led_white_tog = 0;
 253   4                                      led_display_time = 0;
 254   4                                      temp = batlevel_to_led_value(led_stage);
 255   4                                      LED_WHITE_Set_value(temp);
 256   4                              }
 257   3                      }               
 258   2              }
 259   1              else if (led_stage == 2)//stage B
 260   1              {
 261   2                      if (led_display_time >= 50)
 262   2                      {
 263   3                              led_display_time = 0;
 264   3                              if (led_white_tog == 0)
 265   3                              {
 266   4                                      led_white_tog = 1;
 267   4                                      led_display_time = 1;
 268   4                                      temp = batlevel_to_led_value(led_stage);
 269   4                                      if (temp == 0)
 270   4                                      {
 271   5                                              temp = (temp<<1) + 1;
 272   5                                      }                               
 273   4                                      LED_WHITE_Set_value(temp);
 274   4                              }
 275   3                              else
 276   3                              {
 277   4                                      led_white_tog = 0;
 278   4                                      led_display_time = 0;
 279   4                                      temp = batlevel_to_led_value(led_stage);
 280   4                                      LED_WHITE_Set_value(temp);
 281   4                              }
 282   3                      }               
 283   2              }
 284   1              else if (led_stage == 8)//stage D
 285   1              {
 286   2                      if (led_display_time >= 100)
 287   2                      {
 288   3                              led_display_time = 0;
 289   3                              if (led_white_tog == 0)
 290   3                              {
 291   4                                      led_white_tog = 1;
 292   4                                      led_display_time = 1;
 293   4                                      temp = batlevel_to_led_value(led_stage);
 294   4                                      temp = (temp<<1) + 1;
 295   4                                      LED_WHITE_Set_value(temp);
 296   4                              }
 297   3                              else
 298   3                              {
 299   4                                      led_white_tog = 0;
 300   4                                      led_display_time = 0;
 301   4                                      temp = batlevel_to_led_value(led_stage);
 302   4                                      LED_WHITE_Set_value(temp);
C51 COMPILER V9.54   LED                                                                   06/26/2019 22:26:06 PAGE 6   

 303   4                              }
 304   3                      }               
 305   2              }
 306   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    583    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
