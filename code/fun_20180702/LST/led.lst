C51 COMPILER V9.54   LED                                                                   05/26/2019 12:41:32 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN .\Output\led.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE Code\led.c ROM(COMPACT) OPTIMIZE(8,SIZE) BROWSE INCDIR(..\..\Include;..\Inc
                    -lude) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\led.lst) OBJECT(.\Output\led.obj)

line level    source

   1          
   2          
   3          #include "N76E003.h"
   4          #include "SFR_Macro.h"
   5          #include "Function_define.h"
   6          #include "led.h"
   7          #include "motor.h"
   8          
   9          #define LED1_OUTPUT             P13_PushPull_Mode
  10          #define LED2_OUTPUT             P00_PushPull_Mode
  11          #define LED3_OUTPUT             P01_PushPull_Mode
  12          #define LED4_OUTPUT             P03_PushPull_Mode
  13          #define LED_R_OUTPUT    P10_PushPull_Mode
  14          #define LED_G_OUTPUT    P11_PushPull_Mode
  15          #define LED_B_OUTPUT    P15_PushPull_Mode
  16          
  17          #define LED1_SETTING(x)         P13 = x
  18          #define LED2_SETTING(x)         P00 = x
  19          #define LED3_SETTING(x)         P01 = x
  20          #define LED4_SETTING(x)         P03 = x
  21          #define LED_R_SETTING(x)        P10 = x
  22          #define LED_G_SETTING(x)        P11 = x
  23          #define LED_B_SETTING(x)        P15 = x
  24          
  25          extern unsigned char is_5ms_Flag;
  26          bit led_white_tog;
  27          unsigned int led_display_time = 0;
  28          extern unsigned char batlevel;
  29          void Init_LED(void)
  30          {
  31   1              LED1_OUTPUT;
  32   1              LED2_OUTPUT;
  33   1              LED3_OUTPUT;
  34   1              LED4_OUTPUT;
  35   1              LED1_SETTING(0);
  36   1              LED2_SETTING(0);
  37   1              LED3_SETTING(0);
  38   1              LED4_SETTING(0);        
  39   1              
  40   1              LED_R_OUTPUT;
  41   1              LED_G_OUTPUT;
  42   1              LED_B_OUTPUT;
  43   1              
  44   1              LED_R_SETTING(0);
  45   1              LED_G_SETTING(0);
  46   1              LED_B_SETTING(0);
  47   1      }
  48          
  49          void DeInit_LED(void)
  50          {
  51   1              P13_OpenDrain_Mode;
  52   1              P00_OpenDrain_Mode;
  53   1              P01_OpenDrain_Mode;
  54   1              P03_OpenDrain_Mode;
C51 COMPILER V9.54   LED                                                                   05/26/2019 12:41:32 PAGE 2   

  55   1              P10_OpenDrain_Mode;
  56   1              P11_OpenDrain_Mode;
  57   1              P15_OpenDrain_Mode;
  58   1      }
  59          /*
  60          led_type:       LED Or RGB(0:1)
  61          led_value: led value
  62          led_mode:       Normal or Flash(0:1)
  63          */
  64          void LED_WHITE_Set_value(unsigned char led_value)
  65          {
  66   1              LED1_SETTING(led_value&LED1);
  67   1              led_value = led_value >> 1;
  68   1              LED2_SETTING(led_value&LED1);
  69   1              led_value = led_value >> 1;
  70   1              LED3_SETTING(led_value&LED1);
  71   1              led_value = led_value >> 1;
  72   1              LED4_SETTING(led_value&LED1);   
  73   1      }
  74          void LED_WHITE_Setting(unsigned char led_value)
  75          {
  76   1              LED_WHITE_Set_value(led_value);
  77   1              led_display_time = 0;
  78   1              led_white_tog = 0;
  79   1      }
  80          
  81          void LED_RGB_Set_value(unsigned char led_value)
  82          {
  83   1              LED_R_SETTING(led_value&LEDR);
  84   1              led_value = led_value >> 1;
  85   1              LED_B_SETTING(led_value&LEDR);  
  86   1              led_value = led_value >> 1;     
  87   1              LED_G_SETTING(led_value&LEDR);
  88   1      }
  89          void LED_RGB_Setting(unsigned char led_value)
  90          {
  91   1              LED_RGB_Set_value(led_value);
  92   1      }
  93          
  94          unsigned char batlevel_to_led_value(unsigned char stage)
  95          {
  96   1              unsigned char val;
  97   1              if (stage == 1)//stage A
  98   1              {
  99   2                      if (batlevel >= 5)
 100   2                      {
 101   3                              val = 0x0F;
 102   3                      }
 103   2                      else if (batlevel == 4)
 104   2                      {
 105   3                              val = 0x07;
 106   3                      }
 107   2                      else if (batlevel == 3)
 108   2                      {
 109   3                              val = 0x03;
 110   3                      }
 111   2                      else if (batlevel == 2)
 112   2                      {
 113   3                              val = 0x01;
 114   3                      }
 115   2                      else
 116   2                      {
C51 COMPILER V9.54   LED                                                                   05/26/2019 12:41:32 PAGE 3   

 117   3                              val = 0x00;
 118   3                      }
 119   2              }
 120   1              else if (stage == 4)//stage C
 121   1              {
 122   2                      if (batlevel == 6)      //100%
 123   2                              val = 0x0F;
 124   2                      else if (batlevel == 5) //>75%
 125   2                      {
 126   3                              val = 0x07;
 127   3                      }
 128   2                      else if (batlevel == 4) //50%
 129   2                      {
 130   3                              val = 0x03;
 131   3                      }
 132   2                      else if (batlevel == 3) //25
 133   2                      {
 134   3                              val = 0x01;
 135   3                      }
 136   2                      else
 137   2                              val = 0;
 138   2              }
 139   1              else if (stage == 2)//stage B
 140   1              {
 141   2                      if (batlevel >= 5)      //>75%
 142   2                      {
 143   3                              val = 0x0F;
 144   3                      }
 145   2                      else if (batlevel == 4)//>50%
 146   2                      {
 147   3                              val = 0x07;
 148   3                      }
 149   2                      else if (batlevel == 3)//>25%
 150   2                      {
 151   3                              val = 0x03;
 152   3                      }
 153   2                      else if (batlevel == 2)//>10%
 154   2                      {
 155   3                              val = 0x01;
 156   3                      }
 157   2                      else if (batlevel == 1)//<10%
 158   2                      {
 159   3                              val = 0x00;
 160   3                      }
 161   2              }
 162   1              else if (stage == 8)//stage D
 163   1              {
 164   2                      if (batlevel == 6)
 165   2                      {
 166   3                              val = 0x0F;
 167   3                      }
 168   2                      else if (batlevel == 5) //>75%
 169   2                      {
 170   3                              val = 0x07;
 171   3                      }
 172   2                      else if (batlevel == 4)//>50%
 173   2                      {
 174   3                              val = 0x03;
 175   3                      }
 176   2                      else if (batlevel == 3)//>25%
 177   2                      {
 178   3                              val = 0x01;
C51 COMPILER V9.54   LED                                                                   05/26/2019 12:41:32 PAGE 4   

 179   3                      }
 180   2                      else    //<25%
 181   2                      {
 182   3                              val = 0;
 183   3                      }
 184   2              }
 185   1              return val;
 186   1      }
 187          
 188          void LED_Setting(unsigned char led_stage)
 189          {
 190   1              unsigned char temp;
 191   1              led_display_time = 0;
 192   1              if (led_stage == 0)
 193   1              {
 194   2                      LED_WHITE_Setting(0);
 195   2              }
 196   1              else if (led_stage == 1)        //stage_A
 197   1              {
 198   2                      temp = batlevel_to_led_value(led_stage);
 199   2                      LED_WHITE_Setting(temp);
 200   2              }
 201   1              else if (led_stage == 4)//stage C
 202   1              {
 203   2                      temp = batlevel_to_led_value(led_stage);
 204   2                      LED_WHITE_Setting(temp);
 205   2              }
 206   1              else if (led_stage == 2)//stage B
 207   1              {
 208   2                      temp = batlevel_to_led_value(led_stage);
 209   2                      if (temp == 0)
 210   2                              LED_WHITE_Setting(1);
 211   2                      else
 212   2                              LED_WHITE_Setting(temp);
 213   2              }
 214   1              else if (led_stage == 8)//stage D
 215   1              {
 216   2                      temp = batlevel_to_led_value(led_stage);
 217   2                      LED_WHITE_Setting(temp);
 218   2              }
 219   1      }
 220          
 221          void LED_Process(unsigned char led_stage)
 222          {
 223   1              unsigned char temp;
 224   1              if (led_stage == 1)     //stage
 225   1              {
 226   2                      if (led_display_time >= 600)
 227   2                      {
 228   3                              led_stage = 0;
 229   3                              LED_WHITE_Setting(0);
 230   3                      }
 231   2              }
 232   1              else if (led_stage == 4)//stage C
 233   1              {
 234   2                      if (led_display_time >= 100)
 235   2                      {
 236   3                              led_display_time = 0;
 237   3                              if (led_white_tog == 0)
 238   3                              {
 239   4                                      led_white_tog = 1;
 240   4                                      led_display_time = 1;
C51 COMPILER V9.54   LED                                                                   05/26/2019 12:41:32 PAGE 5   

 241   4                                      temp = batlevel_to_led_value(led_stage);
 242   4                                      temp = (temp<<1) + 1;
 243   4                                      LED_WHITE_Set_value(temp);
 244   4                              }
 245   3                              else
 246   3                              {
 247   4                                      led_white_tog = 0;
 248   4                                      led_display_time = 0;
 249   4                                      temp = batlevel_to_led_value(led_stage);
 250   4                                      LED_WHITE_Set_value(temp);
 251   4                              }
 252   3                      }               
 253   2              }
 254   1              else if (led_stage == 2)//stage B
 255   1              {
 256   2                      if (led_display_time >= 50)
 257   2                      {
 258   3                              led_display_time = 0;
 259   3                              if (led_white_tog == 0)
 260   3                              {
 261   4                                      led_white_tog = 1;
 262   4                                      led_display_time = 1;
 263   4                                      temp = batlevel_to_led_value(led_stage);
 264   4                                      if (temp == 0)
 265   4                                      {
 266   5                                              temp = (temp<<1) + 1;
 267   5                                      }                               
 268   4                                      LED_WHITE_Set_value(temp);
 269   4                              }
 270   3                              else
 271   3                              {
 272   4                                      led_white_tog = 0;
 273   4                                      led_display_time = 0;
 274   4                                      temp = batlevel_to_led_value(led_stage);
 275   4                                      LED_WHITE_Set_value(temp);
 276   4                              }
 277   3                      }               
 278   2              }
 279   1              else if (led_stage == 8)//stage D
 280   1              {
 281   2                      if (led_display_time >= 100)
 282   2                      {
 283   3                              led_display_time = 0;
 284   3                              if (led_white_tog == 0)
 285   3                              {
 286   4                                      led_white_tog = 1;
 287   4                                      led_display_time = 1;
 288   4                                      temp = batlevel_to_led_value(led_stage);
 289   4                                      temp = (temp<<1) + 1;
 290   4                                      LED_WHITE_Set_value(temp);
 291   4                              }
 292   3                              else
 293   3                              {
 294   4                                      led_white_tog = 0;
 295   4                                      led_display_time = 0;
 296   4                                      temp = batlevel_to_led_value(led_stage);
 297   4                                      LED_WHITE_Set_value(temp);
 298   4                              }
 299   3                      }               
 300   2              }
 301   1      }

C51 COMPILER V9.54   LED                                                                   05/26/2019 12:41:32 PAGE 6   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    588    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
